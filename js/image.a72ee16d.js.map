{"version":3,"file":"js/image.a72ee16d.js","mappings":"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","sources":["webpack://badge-generator/./src/constants/text.ts","webpack://badge-generator/./src/lib.ts","webpack://badge-generator/./src/components/Checkbox.vue?519b","webpack://badge-generator/./src/components/Checkbox.vue","webpack://badge-generator/./src/components/Checkbox.vue?2e6e","webpack://badge-generator/./src/components/Code.vue?b005","webpack://badge-generator/./src/components/Code.vue","webpack://badge-generator/./src/components/Code.vue?52d4","webpack://badge-generator/./src/components/Help.vue?2b55","webpack://badge-generator/./src/components/Help.vue","webpack://badge-generator/./src/components/Help.vue?a5ec","webpack://badge-generator/./src/components/Results.vue?ddfc","webpack://badge-generator/./src/components/Results.vue","webpack://badge-generator/./src/components/Results.vue?b96a","webpack://badge-generator/./src/components/TextInput.vue?dd83","webpack://badge-generator/./src/components/TextInput.vue","webpack://badge-generator/./src/components/TextInput.vue?504a","webpack://badge-generator/./src/views/Image.vue?b7f1","webpack://badge-generator/./src/views/Image.vue","webpack://badge-generator/./src/constants/image.ts","webpack://badge-generator/./src/core/images.ts","webpack://badge-generator/./src/views/Image.vue?bb38"],"sourcesContent":["export const INITIAL_RESULT = \"_Your output will appear here_\";\n\nexport const COLOR_HELP =\n  \"Custom color for some badges on this page which use this value. Must be a keyword or hex code. <br>Hints: `brightgreen`, `green`, `yellowgreen`, `yellow`, `orange`, `red`, `blue`, `lightgrey`, `success`, `important`, `critical`, `informational`, `inactive`, `blueviolet`, `ff69b4`, `9cf`, `2ea44f` (GitHub's green). <br>The Shields.io API will use `blue` as a default if no color is provided.\";\n\nexport const LOGO_HELP =\n  \"Supports values like `dependabot`, `discord` and `npm`. And hundreds of logos from [SimpleIcons](https://simpleicons.org/) such as `python`, `node.js` and `visual-studio-code`\";\n\nexport const LOGO_COLOR_HELP =\n  \"Color keyword or hex code. The badge's own color will be used unless you specify an override. Using `white` is great for readability against the dark label background.\";\n","/**\n * Lib helper functions for Vue app.\n */\n\nexport function stripLeadingSlash(value: string) {\n  return value.replace(/^\\/+/, \"\");\n}\n\nexport function slugify(...values: string[]) {\n  const value = values.join(\"-\");\n\n  return value\n    .replace(/^\\s+|\\s+$/g, \"\") // Trim\n    .toLowerCase()\n    .replace(/[^a-z0-9 -]/g, \"\")\n    .replace(/\\s+/g, \"-\") // Collapse whitespace\n    .replace(/-+/g, \"-\"); // Collapse dashes\n}\n","import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\"\n\nconst _hoisted_1 = [\"for\"]\nconst _hoisted_2 = [\"id\", \"checked\"]\nconst _hoisted_3 = {\n  key: 0,\n  class: \"note\"\n}\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_Markdown = _resolveComponent(\"Markdown\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", null, [\n    _createElementVNode(\"label\", { for: _ctx.slug }, _toDisplayString(_ctx.label), 9, _hoisted_1),\n    _createElementVNode(\"input\", {\n      id: _ctx.slug,\n      type: \"checkbox\",\n      checked: _ctx.modelValue,\n      onChange: _cache[0] || (_cache[0] = ($event: any) => (\n        _ctx.$emit('update:modelValue', ($event.target as HTMLInputElement).checked)\n      ))\n    }, null, 40, _hoisted_2),\n    (_ctx.note)\n      ? (_openBlock(), _createElementBlock(\"small\", _hoisted_3, [\n          _createVNode(_component_Markdown, { content: _ctx.note }, null, 8, [\"content\"])\n        ]))\n      : _createCommentVNode(\"\", true)\n  ]))\n}","<template>\n  <div>\n    <label :for=\"slug\">\n      {{ label }}\n    </label>\n\n    <input\n      :id=\"slug\"\n      type=\"checkbox\"\n      :checked=\"modelValue\"\n      v-on:change=\"\n        $emit('update:modelValue', ($event.target as HTMLInputElement).checked)\n      \"\n    />\n\n    <small class=\"note\" v-if=\"note\">\n      <Markdown :content=\"note\"></Markdown>\n    </small>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from \"vue\";\n\nimport Markdown from \"@/components/Markdown.vue\";\nimport { slugify } from \"@/lib\";\n\nexport default defineComponent({\n  name: \"CheckboxItem\",\n  components: {\n    Markdown,\n  },\n  props: {\n    label: { type: String, required: true },\n    modelValue: { type: Boolean, required: false },\n    note: { type: String, required: false },\n  },\n  computed: {\n    slug(): string {\n      return slugify(\"box\", this.label);\n    },\n  },\n});\n</script>\n","import { render } from \"./Checkbox.vue?vue&type=template&id=eac29fba&ts=true\"\nimport script from \"./Checkbox.vue?vue&type=script&lang=ts\"\nexport * from \"./Checkbox.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1)\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_Checkbox = _resolveComponent(\"Checkbox\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", null, [\n    _createVNode(_component_Checkbox, {\n      label: \"Show HTML\",\n      modelValue: _ctx.asHtml,\n      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((_ctx.asHtml) = $event))\n    }, null, 8, [\"modelValue\"]),\n    _hoisted_1,\n    _createElementVNode(\"pre\", null, [\n      _createElementVNode(\"code\", {\n        ref: \"codeBlock\",\n        class: \"markdown\"\n      }, _toDisplayString(_ctx.outputCode), 513)\n    ])\n  ]))\n}","// Render Markdown as a codeblock. Apply highlighting on content changes.\n<template>\n  <div>\n    <Checkbox label=\"Show HTML\" v-model=\"asHtml\" />\n    <br />\n\n    <pre><code ref=\"codeBlock\" class=\"markdown\">{{ outputCode }}</code></pre>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport hljs from \"highlight.js\";\nimport { defineComponent } from \"vue\";\n\nimport { cleanHtml, mdToHTML } from \"@/core/markdown\";\nimport Checkbox from \"./Checkbox.vue\";\n\nexport default defineComponent({\n  name: \"CodeItem\",\n  components: {\n    Checkbox,\n  },\n  props: {\n    code: { type: String, required: true },\n  },\n  data() {\n    return {\n      asHtml: false,\n    };\n  },\n  computed: {\n    outputCode(): String {\n      if (this.asHtml) {\n        const htmlCode = mdToHTML(this.code);\n\n        return cleanHtml(htmlCode);\n      }\n      return this.code;\n    },\n  },\n  methods: {\n    highlight() {\n      const block = this.$refs.codeBlock as HTMLElement;\n      hljs.highlightElement(block);\n    },\n  },\n  mounted() {\n    this.highlight();\n  },\n  updated() {\n    this.highlight();\n  },\n});\n</script>\n","import { render } from \"./Code.vue?vue&type=template&id=f62513dc&ts=true\"\nimport script from \"./Code.vue?vue&type=script&lang=ts\"\nexport * from \"./Code.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"app-notes\" }\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Notes\", -1)\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_Markdown = _resolveComponent(\"Markdown\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _hoisted_2,\n    _createElementVNode(\"p\", null, [\n      _createVNode(_component_Markdown, { content: _ctx.message }, null, 8, [\"content\"])\n    ])\n  ]))\n}","<template>\n  <div class=\"app-notes\">\n    <h2>Notes</h2>\n    <p>\n      <Markdown :content=\"message\"></Markdown>\n    </p>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from \"vue\";\nimport Markdown from \"@/components/Markdown.vue\";\n\nexport default defineComponent({\n  name: \"HelpItem\",\n  components: {\n    Markdown,\n  },\n  props: {\n    message: { type: String, required: true },\n  },\n});\n</script>\n","import { render } from \"./Help.vue?vue&type=template&id=264f967b&ts=true\"\nimport script from \"./Help.vue?vue&type=script&lang=ts\"\nexport * from \"./Help.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-5b828de6\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"app-results\" }\nconst _hoisted_2 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"Output values\", -1))\nconst _hoisted_3 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"h3\", null, \"Preview\", -1))\nconst _hoisted_4 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1))\nconst _hoisted_5 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"h3\", null, \"Code\", -1))\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_Markdown = _resolveComponent(\"Markdown\")!\n  const _component_CodeItem = _resolveComponent(\"CodeItem\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _hoisted_2,\n    _createElementVNode(\"div\", null, [\n      _hoisted_3,\n      _createVNode(_component_Markdown, {\n        class: \"markdown-preview\",\n        content: _ctx.result\n      }, null, 8, [\"content\"])\n    ]),\n    _hoisted_4,\n    _createElementVNode(\"div\", null, [\n      _hoisted_5,\n      _createVNode(_component_CodeItem, { code: _ctx.result }, null, 8, [\"code\"])\n    ])\n  ]))\n}","<template>\n  <!-- Badge Generator output pane -->\n  <div class=\"app-results\">\n    <h2>Output values</h2>\n\n    <div>\n      <h3>Preview</h3>\n\n      <Markdown class=\"markdown-preview\" :content=\"result\"></Markdown>\n    </div>\n\n    <br />\n\n    <div>\n      <h3>Code</h3>\n\n      <CodeItem :code=\"result\" />\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from \"vue\";\n\nimport CodeItem from \"@/components/Code.vue\";\nimport Markdown from \"@/components/Markdown.vue\";\n\nexport default defineComponent({\n  name: \"ResultsItem\",\n  components: {\n    Markdown,\n    CodeItem,\n  },\n  props: {\n    result: { type: String, required: true },\n  },\n});\n</script>\n\n<style scoped>\n.markdown-preview {\n  padding-left: 12px;\n}\n</style>\n","import { render } from \"./Results.vue?vue&type=template&id=5b828de6&scoped=true&ts=true\"\nimport script from \"./Results.vue?vue&type=script&lang=ts\"\nexport * from \"./Results.vue?vue&type=script&lang=ts\"\n\nimport \"./Results.vue?vue&type=style&index=0&id=5b828de6&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-5b828de6\"]])\n\nexport default __exports__","import { toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-de2a2f90\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = [\"for\"]\nconst _hoisted_2 = {\n  key: 0,\n  class: \"required\"\n}\nconst _hoisted_3 = [\"id\", \"value\", \"placeholder\", \"required\", \"disabled\"]\nconst _hoisted_4 = {\n  key: 0,\n  class: \"note\"\n}\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_Markdown = _resolveComponent(\"Markdown\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", null, [\n    _createElementVNode(\"label\", { for: _ctx.slug }, [\n      _createTextVNode(_toDisplayString(_ctx.label), 1),\n      (_ctx.isRequired)\n        ? (_openBlock(), _createElementBlock(\"span\", _hoisted_2, \"*\"))\n        : _createCommentVNode(\"\", true)\n    ], 8, _hoisted_1),\n    _createElementVNode(\"input\", {\n      id: _ctx.slug,\n      type: \"text\",\n      value: _ctx.modelValue,\n      placeholder: _ctx.placeholder,\n      required: _ctx.isRequired,\n      disabled: _ctx.disabled,\n      onInput: _cache[0] || (_cache[0] = ($event: any) => (_ctx.$emit('update:modelValue', $event.target.value)))\n    }, null, 40, _hoisted_3),\n    (_ctx.note)\n      ? (_openBlock(), _createElementBlock(\"small\", _hoisted_4, [\n          _createVNode(_component_Markdown, { content: _ctx.note }, null, 8, [\"content\"])\n        ]))\n      : _createCommentVNode(\"\", true)\n  ]))\n}","<template>\n  <div>\n    <label :for=\"slug\">\n      {{ label }}<span v-if=\"isRequired\" class=\"required\">*</span>\n    </label>\n\n    <input\n      :id=\"slug\"\n      type=\"text\"\n      :value=\"modelValue\"\n      :placeholder=\"placeholder\"\n      :required=\"isRequired\"\n      :disabled=\"disabled\"\n      v-on:input=\"$emit('update:modelValue', $event.target.value)\"\n    />\n\n    <small class=\"note\" v-if=\"note\">\n      <Markdown :content=\"note\"></Markdown>\n    </small>\n  </div>\n</template>\n\n<style scoped>\nlabel {\n  padding-right: 0.5em;\n}\n</style>\n\n<script lang=\"ts\">\nimport { defineComponent } from \"vue\";\n\nimport { slugify } from \"@/lib\";\nimport Markdown from \"@/components/Markdown.vue\";\n\nexport default defineComponent({\n  name: \"TextInput\",\n  components: {\n    Markdown,\n  },\n  props: {\n    label: { type: String, required: true },\n    modelValue: { type: String, required: true },\n    placeholder: { type: String, required: false },\n    isRequired: { type: Boolean, required: false },\n    disabled: { type: Boolean, required: false },\n    note: { type: String, required: false },\n  },\n  computed: {\n    slug(): string {\n      return slugify(\"text\", this.label, this.modelValue);\n    },\n  },\n});\n</script>\n","import { render } from \"./TextInput.vue?vue&type=template&id=de2a2f90&scoped=true&ts=true\"\nimport script from \"./TextInput.vue?vue&type=script&lang=ts\"\nexport * from \"./TextInput.vue?vue&type=script&lang=ts\"\n\nimport \"./TextInput.vue?vue&type=style&index=0&id=de2a2f90&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-de2a2f90\"]])\n\nexport default __exports__","import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"images container-lg\" }\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"div\", { class: \"row\" }, [\n  /*#__PURE__*/_createElementVNode(\"div\", { class: \"col-12\" }, [\n    /*#__PURE__*/_createElementVNode(\"h1\", null, \"Image\"),\n    /*#__PURE__*/_createElementVNode(\"p\", null, \" Add an image to your README.md file, such as your logo or a sample screenshot of your app. This is just a badge section, but displaying an image using markdown and HTML. An image is provided to make it easier to test sizing, but this image will not be used when you reuse the code elsewhere. \")\n  ])\n], -1)\nconst _hoisted_3 = { class: \"row\" }\nconst _hoisted_4 = { class: \"col-6\" }\nconst _hoisted_5 = { class: \"app-input\" }\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Input values\", -1)\nconst _hoisted_7 = { name: \"links\" }\nconst _hoisted_8 = /*#__PURE__*/_createElementVNode(\"legend\", null, \"Links\", -1)\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1)\nconst _hoisted_10 = { name: \"text\" }\nconst _hoisted_11 = /*#__PURE__*/_createElementVNode(\"legend\", null, \"Text\", -1)\nconst _hoisted_12 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1)\nconst _hoisted_13 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1)\nconst _hoisted_14 = { id: \"appearance\" }\nconst _hoisted_15 = /*#__PURE__*/_createElementVNode(\"legend\", null, \"Appearance\", -1)\nconst _hoisted_16 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1)\nconst _hoisted_17 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1)\nconst _hoisted_18 = /*#__PURE__*/_createElementVNode(\"input\", {\n  class: \"btn\",\n  type: \"submit\",\n  value: \"Submit\"\n}, null, -1)\nconst _hoisted_19 = { class: \"col-6\" }\nconst _hoisted_20 = { class: \"row\" }\nconst _hoisted_21 = { class: \"col-12\" }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_TextInput = _resolveComponent(\"TextInput\")!\n  const _component_Results = _resolveComponent(\"Results\")!\n  const _component_Help = _resolveComponent(\"Help\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _hoisted_2,\n    _createElementVNode(\"div\", _hoisted_3, [\n      _createElementVNode(\"div\", _hoisted_4, [\n        _createElementVNode(\"div\", _hoisted_5, [\n          _hoisted_6,\n          _createElementVNode(\"form\", {\n            onSubmit: _cache[6] || (_cache[6] = _withModifiers(\n//@ts-ignore\n(...args) => (_ctx.submit && _ctx.submit(...args)), [\"prevent\"]))\n          }, [\n            _createElementVNode(\"fieldset\", _hoisted_7, [\n              _hoisted_8,\n              _createVNode(_component_TextInput, {\n                label: \"Source\",\n                modelValue: _ctx.imgSrc,\n                \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((_ctx.imgSrc) = $event)),\n                placeholder: \"e.g. /sample.png\",\n                note: \"Local path or URL.\",\n                isRequired: \"\"\n              }, null, 8, [\"modelValue\"]),\n              _createVNode(_component_TextInput, {\n                label: \"Click target\",\n                modelValue: _ctx.linkTarget,\n                \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((_ctx.linkTarget) = $event)),\n                placeholder: \"e.g. https://example.com\",\n                note: \"Local path or external URL. Such as docs/ or link to project site.\"\n              }, null, 8, [\"modelValue\"])\n            ]),\n            _hoisted_9,\n            _createElementVNode(\"fieldset\", _hoisted_10, [\n              _hoisted_11,\n              _createVNode(_component_TextInput, {\n                label: \"Alt text\",\n                modelValue: _ctx.altText,\n                \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => ((_ctx.altText) = $event)),\n                placeholder: \"e.g. Sample screenshot\",\n                note: \"Fallback image text on broken link. If not set, the image path will be used\"\n              }, null, 8, [\"modelValue\"]),\n              _hoisted_12,\n              _createVNode(_component_TextInput, {\n                label: \"Title\",\n                modelValue: _ctx.imgTitle,\n                \"onUpdate:modelValue\": _cache[3] || (_cache[3] = ($event: any) => ((_ctx.imgTitle) = $event)),\n                note: \"Text to show on hover. Recommended - describe the action that the button will trigger e.g. 'Go to website', 'Go to repo', or 'Go to docs'\"\n              }, null, 8, [\"modelValue\"])\n            ]),\n            _hoisted_13,\n            _createElementVNode(\"fieldset\", _hoisted_14, [\n              _hoisted_15,\n              _createVNode(_component_TextInput, {\n                label: \"Width\",\n                modelValue: _ctx.width,\n                \"onUpdate:modelValue\": _cache[4] || (_cache[4] = ($event: any) => ((_ctx.width) = $event)),\n                placeholder: \"e.g. 400\",\n                note: \"Measured in pixels, but no px symbol is needed. If you set width only, then height will default to 'auto', which works well on mobile and desktop.\"\n              }, null, 8, [\"modelValue\"]),\n              _hoisted_16,\n              _createVNode(_component_TextInput, {\n                label: \"Height\",\n                modelValue: _ctx.height,\n                \"onUpdate:modelValue\": _cache[5] || (_cache[5] = ($event: any) => ((_ctx.height) = $event)),\n                placeholder: \"e.g. 400\",\n                note: \"Warning: You probably don't need to set height. If you set height but not width, then you might get a squashed image on mobile view.\"\n              }, null, 8, [\"modelValue\"])\n            ]),\n            _hoisted_17,\n            _hoisted_18\n          ], 32)\n        ])\n      ]),\n      _createElementVNode(\"div\", _hoisted_19, [\n        _createVNode(_component_Results, { result: _ctx.result }, null, 8, [\"result\"])\n      ])\n    ]),\n    _createElementVNode(\"div\", _hoisted_20, [\n      _createElementVNode(\"div\", _hoisted_21, [\n        _createVNode(_component_Help, { message: _ctx.helpMessage }, null, 8, [\"message\"])\n      ])\n    ])\n  ]))\n}","<template>\n  <div class=\"images container-lg\">\n    <div class=\"row\">\n      <div class=\"col-12\">\n        <h1>Image</h1>\n\n        <p>\n          Add an image to your README.md file, such as your logo or a sample\n          screenshot of your app. This is just a badge section, but displaying\n          an image using markdown and HTML. An image is provided to make it\n          easier to test sizing, but this image will not be used when you reuse\n          the code elsewhere.\n        </p>\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-6\">\n        <div class=\"app-input\">\n          <h2>Input values</h2>\n\n          <form @submit.prevent.enter=\"submit\">\n            <fieldset name=\"links\">\n              <legend>Links</legend>\n\n              <TextInput\n                label=\"Source\"\n                v-model=\"imgSrc\"\n                placeholder=\"e.g. /sample.png\"\n                note=\"Local path or URL.\"\n                isRequired\n              />\n\n              <TextInput\n                label=\"Click target\"\n                v-model=\"linkTarget\"\n                placeholder=\"e.g. https://example.com\"\n                note=\"Local path or external URL. Such as docs/ or link to project site.\"\n              />\n            </fieldset>\n            <br />\n\n            <fieldset name=\"text\">\n              <legend>Text</legend>\n\n              <TextInput\n                label=\"Alt text\"\n                v-model=\"altText\"\n                placeholder=\"e.g. Sample screenshot\"\n                note=\"Fallback image text on broken link. If not set, the image path will be used\"\n              />\n              <br />\n\n              <TextInput\n                label=\"Title\"\n                v-model=\"imgTitle\"\n                note=\"Text to show on hover. Recommended - describe the action that the button will trigger e.g. 'Go to website', 'Go to repo', or 'Go to docs'\"\n              />\n            </fieldset>\n            <br />\n\n            <fieldset id=\"appearance\">\n              <legend>Appearance</legend>\n\n              <TextInput\n                label=\"Width\"\n                v-model=\"width\"\n                placeholder=\"e.g. 400\"\n                note=\"Measured in pixels, but no px symbol is needed. If you set width only, then height will default to 'auto', which works well on mobile and desktop.\"\n              />\n              <br />\n\n              <TextInput\n                label=\"Height\"\n                v-model=\"height\"\n                placeholder=\"e.g. 400\"\n                note=\"Warning: You probably don't need to set height. If you set height but not width, then you might get a squashed image on mobile view.\"\n              />\n            </fieldset>\n\n            <br />\n\n            <input class=\"btn\" type=\"submit\" value=\"Submit\" />\n          </form>\n        </div>\n      </div>\n\n      <div class=\"col-6\">\n        <Results :result=\"result\" />\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-12\">\n        <Help :message=\"helpMessage\" />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from \"vue\";\n\nimport { stripLeadingSlash } from \"@/lib\";\n\nimport { DEBUG } from \"@/constants/\";\nimport { SCREENSHOT } from \"@/constants/image\";\nimport { INITIAL_RESULT } from \"@/constants/text\";\n\nimport Help from \"@/components/Help.vue\";\nimport Results from \"@/components/Results.vue\";\nimport TextInput from \"@/components/TextInput.vue\";\n\nimport { mdImageWithLink } from \"@/core/markdown\";\nimport { mkHtmlImg } from \"@/core/images\";\n\nconst helpMessage = `\\\n<p>\n  Styling has been setup so that images in the preview pane will not\n  extend beyond the width of the preview area, even no width or a\n  large width has been set.\n</p>\n<p>\n  Tip: Pressing the <kbd>Enter</kbd> key after updating a text field\n  will also submit.\n</p>\n<p>\n  Setting <i>width</i> and <i>height</i> is optional, but this can\n  help in certain cases. For example, a screenshot or logo will be set\n  by GitHub to <i>100%</i> of the page width making it look large and\n  take up vertical space, so reduce height or width manually.\n</p>\n<p>\n  Setting height can also make sure the height of the tag is set\n  before the image loads, so it reserves the space - if the height is\n  larger than the original image though then the image will looked\n  stretched.\n</p>\n<p>\n  Warning: If you set height only to say 400, then the image in the\n  README.md will look fine on desktop but ends up looking distorted on\n  mobile.\n</p>`;\n\n// 'Image' is reserved in Vue so use alternative.\nexport default defineComponent({\n  name: \"ImageView\",\n  components: {\n    Help,\n    Results,\n    TextInput,\n  },\n  data() {\n    return {\n      ...SCREENSHOT,\n\n      result: INITIAL_RESULT,\n      helpMessage,\n    };\n  },\n  computed: {\n    altTextOut(): string {\n      return stripLeadingSlash(this.altText || this.imgSrc);\n    },\n    imgTitleOut(): string {\n      return stripLeadingSlash(this.imgTitle);\n    },\n  },\n  methods: {\n    submit() {\n      if (DEBUG) {\n        console.debug(\"Process inputs and render results\");\n      }\n\n      const htmlImg = mkHtmlImg(\n        this.imgSrc,\n        this.altTextOut,\n        this.imgTitleOut,\n        this.linkTarget,\n        this.width,\n        this.height\n      );\n\n      const mdImg = mdImageWithLink({\n        altText: this.altTextOut,\n        imageTarget: this.imgSrc,\n        linkTarget: this.linkTarget,\n        hoverTitle: this.imgTitleOut,\n      });\n\n      this.result = `\\\n_HTML image_\n\n<div align=\"center\">\n    ${htmlImg}\n</div>\n\n\n_Markdown image_\n\n<div align=\"center\">\n\n${mdImg}\n\n</div>\n      `;\n    },\n  },\n});\n</script>\n\n<style>\n/* Prevent markdown preview image from going way off the right. Using `scoped` doesn't work, but\nadding an explicit wrapping class helps scope this. */\n.app-results img {\n  max-width: 100%;\n}\n</style>\n","// Default for Image.vue.\nexport const SCREENSHOT = {\n  imgSrc: \"/sample.png\",\n  linkTarget: \"\",\n  altText: \"Sample screenshot\",\n  imgTitle: \"\",\n  width: \"400\",\n  height: \"\",\n};\n","/**\n * Images module.\n *\n * This was attempted using a Vue component instead of with templating. But\n * rendering proved an issue as the finished element was shown even inside of\n * `pre` and `code` tags.\n *\n * The indentation here is not smart because of the nested rendering, but, it\n * works well enough to use it. Maybe there is a function in the Markdown\n * library or similar to handle indenting.\n */\nexport function mkHtmlImg(\n  src: string,\n  alt: string,\n  title: string,\n  target = \"\",\n  width: string,\n  height: string\n) {\n  const htmlTitle = title ? ` title=\"${title}\"` : \"\",\n    htmlAltText = alt ? ` alt=\"${alt}\"` : \"\",\n    htmlWidth = width ? ` width=\"${width}\"` : \"\",\n    htmlHeight = height ? ` height=\"${height}\"` : \"\";\n\n  let htmlImg = `<img src=\"${src}\"${htmlAltText}${htmlTitle}${htmlWidth}${htmlHeight}>`;\n\n  if (target) {\n    htmlImg = `\\\n<a href=\"${target}\">\n    ${htmlImg}\n</a>`;\n  }\n\n  return htmlImg;\n}\n","import { render } from \"./Image.vue?vue&type=template&id=1ee47df2&ts=true\"\nimport script from \"./Image.vue?vue&type=script&lang=ts\"\nexport * from \"./Image.vue?vue&type=script&lang=ts\"\n\nimport \"./Image.vue?vue&type=style&index=0&id=1ee47df2&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["INITIAL_RESULT","COLOR_HELP","LOGO_HELP","LOGO_COLOR_HELP","stripLeadingSlash","value","replace","slugify","values","join","toLowerCase","_hoisted_1","_hoisted_2","_hoisted_3","class","render","_ctx","_cache","$props","$setup","$data","$options","_component_Markdown","for","slug","label","id","type","checked","modelValue","$emit","note","content","name","components","Markdown","props","String","required","Boolean","computed","this","__exports__","_component_Checkbox","asHtml","ref","outputCode","Checkbox","code","data","htmlCode","methods","highlight","block","$refs","codeBlock","mounted","updated","message","_withScopeId","n","_hoisted_4","_hoisted_5","_component_CodeItem","result","CodeItem","isRequired","placeholder","disabled","$event","target","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_21","_component_TextInput","_component_Results","_component_Help","args","submit","imgSrc","linkTarget","altText","imgTitle","width","height","helpMessage","SCREENSHOT","mkHtmlImg","src","alt","title","htmlTitle","htmlAltText","htmlWidth","htmlHeight","htmlImg","Help","Results","TextInput","altTextOut","imgTitleOut","console","debug","mdImg","imageTarget","hoverTitle"],"sourceRoot":""}
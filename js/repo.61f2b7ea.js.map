{"version":3,"file":"js/repo.61f2b7ea.js","mappings":"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","sources":["webpack://badge-generator/./src/constants/text.ts","webpack://badge-generator/./src/lib.ts","webpack://badge-generator/./src/components/Checkbox.vue?3ea7","webpack://badge-generator/./src/components/Checkbox.vue","webpack://badge-generator/./src/components/Checkbox.vue?2e6e","webpack://badge-generator/./src/components/Code.vue?b005","webpack://badge-generator/./src/components/Code.vue","webpack://badge-generator/./src/components/Code.vue?52d4","webpack://badge-generator/./src/components/Help.vue?2b55","webpack://badge-generator/./src/components/Help.vue","webpack://badge-generator/./src/components/Help.vue?a5ec","webpack://badge-generator/./src/components/Results.vue?ddfc","webpack://badge-generator/./src/components/Results.vue","webpack://badge-generator/./src/components/Results.vue?b96a","webpack://badge-generator/./src/components/TextInput.vue?dd83","webpack://badge-generator/./src/components/TextInput.vue","webpack://badge-generator/./src/components/TextInput.vue?504a","webpack://badge-generator/./src/views/RepoBadges.vue?349e","webpack://badge-generator/./src/views/RepoBadges.vue","webpack://badge-generator/./src/core/ghActions.ts","webpack://badge-generator/./src/views/RepoBadges.vue?370a"],"sourcesContent":["export const INITIAL_RESULT = \"_Your output will appear here_\";\n\nexport const COLOR_HELP =\n  \"Custom color for some badges on this page which use this value. Must be a keyword or hex code. <br>Hints: `brightgreen`, `green`, `yellowgreen`, `yellow`, `orange`, `red`, `blue`, `lightgrey`, `success`, `important`, `critical`, `informational`, `inactive`, `blueviolet`, `ff69b4`, `9cf`, `2ea44f` (GitHub's green). <br>The Shields.io API will use `blue` as a default if no color is provided.\";\n\nexport const LOGO_HELP =\n  \"Supports values like `dependabot`, `discord` and `npm`. And hundreds of logos from [SimpleIcons](https://simpleicons.org/) such as `python`, `node.js` and `visual-studio-code`\";\n\nexport const LOGO_COLOR_HELP =\n  \"Color keyword or hex code. The badge's own color will be used unless you specify an override. Using `white` is great for readability against the dark label background.\";\n","/**\n * Lib helper functions for Vue app.\n */\n\nexport function stripLeadingSlash(value: string) {\n  return value.replace(/^\\/+/, \"\");\n}\n\nexport function slugify(...values: string[]) {\n  const value = values.join(\"-\");\n\n  return value\n    .replace(/^\\s+|\\s+$/g, \"\") // Trim\n    .toLowerCase()\n    .replace(/[^a-z0-9 -]/g, \"\")\n    .replace(/\\s+/g, \"-\") // Collapse whitespace\n    .replace(/-+/g, \"-\"); // Collapse dashes\n}\n","import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\"\n\nconst _hoisted_1 = [\"for\"]\nconst _hoisted_2 = [\"id\", \"checked\"]\nconst _hoisted_3 = {\n  key: 0,\n  class: \"note\"\n}\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_Markdown = _resolveComponent(\"Markdown\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", null, [\n    _createElementVNode(\"label\", { for: _ctx.slug }, _toDisplayString(_ctx.label), 9, _hoisted_1),\n    _createElementVNode(\"input\", {\n      id: _ctx.slug,\n      type: \"checkbox\",\n      checked: _ctx.modelValue,\n      onChange: _cache[0] || (_cache[0] = ($event: any) => (_ctx.$emit('update:modelValue', $event.target.checked)))\n    }, null, 40, _hoisted_2),\n    (_ctx.note)\n      ? (_openBlock(), _createElementBlock(\"small\", _hoisted_3, [\n          _createVNode(_component_Markdown, { content: _ctx.note }, null, 8, [\"content\"])\n        ]))\n      : _createCommentVNode(\"\", true)\n  ]))\n}","<template>\n  <div>\n    <label :for=\"slug\">\n      {{ label }}\n    </label>\n\n    <input\n      :id=\"slug\"\n      type=\"checkbox\"\n      :checked=\"modelValue\"\n      v-on:change=\"$emit('update:modelValue', $event.target.checked)\"\n    />\n\n    <small class=\"note\" v-if=\"note\">\n      <Markdown :content=\"note\"></Markdown>\n    </small>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from \"vue\";\n\nimport Markdown from \"@/components/Markdown.vue\";\nimport { slugify } from \"@/lib\";\n\nexport default defineComponent({\n  name: \"CheckboxItem\",\n  components: {\n    Markdown,\n  },\n  props: {\n    label: { type: String, required: true },\n    modelValue: { type: Boolean, required: false },\n    note: { type: String, required: false },\n  },\n  computed: {\n    slug(): string {\n      return slugify(\"box\", this.label);\n    },\n  },\n});\n</script>\n","import { render } from \"./Checkbox.vue?vue&type=template&id=5d7f22a6&ts=true\"\nimport script from \"./Checkbox.vue?vue&type=script&lang=ts\"\nexport * from \"./Checkbox.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1)\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_Checkbox = _resolveComponent(\"Checkbox\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", null, [\n    _createVNode(_component_Checkbox, {\n      label: \"Show HTML\",\n      modelValue: _ctx.asHtml,\n      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((_ctx.asHtml) = $event))\n    }, null, 8, [\"modelValue\"]),\n    _hoisted_1,\n    _createElementVNode(\"pre\", null, [\n      _createElementVNode(\"code\", {\n        ref: \"codeBlock\",\n        class: \"markdown\"\n      }, _toDisplayString(_ctx.outputCode), 513)\n    ])\n  ]))\n}","// Render Markdown as a codeblock. Apply highlighting on content changes.\n<template>\n  <div>\n    <Checkbox label=\"Show HTML\" v-model=\"asHtml\" />\n    <br />\n\n    <pre><code ref=\"codeBlock\" class=\"markdown\">{{ outputCode }}</code></pre>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport hljs from \"highlight.js\";\nimport { defineComponent } from \"vue\";\n\nimport { cleanHtml, mdToHTML } from \"@/core/markdown\";\nimport Checkbox from \"./Checkbox.vue\";\n\nexport default defineComponent({\n  name: \"CodeItem\",\n  components: {\n    Checkbox,\n  },\n  props: {\n    code: { type: String, required: true },\n  },\n  data() {\n    return {\n      asHtml: false,\n    };\n  },\n  computed: {\n    outputCode(): String {\n      if (this.asHtml) {\n        const htmlCode = mdToHTML(this.code);\n\n        return cleanHtml(htmlCode);\n      }\n      return this.code;\n    },\n  },\n  methods: {\n    highlight() {\n      const block = this.$refs.codeBlock as HTMLElement;\n      hljs.highlightElement(block);\n    },\n  },\n  mounted() {\n    this.highlight();\n  },\n  updated() {\n    this.highlight();\n  },\n});\n</script>\n","import { render } from \"./Code.vue?vue&type=template&id=f62513dc&ts=true\"\nimport script from \"./Code.vue?vue&type=script&lang=ts\"\nexport * from \"./Code.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"app-notes\" }\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Notes\", -1)\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_Markdown = _resolveComponent(\"Markdown\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _hoisted_2,\n    _createElementVNode(\"p\", null, [\n      _createVNode(_component_Markdown, { content: _ctx.message }, null, 8, [\"content\"])\n    ])\n  ]))\n}","<template>\n  <div class=\"app-notes\">\n    <h2>Notes</h2>\n    <p>\n      <Markdown :content=\"message\"></Markdown>\n    </p>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from \"vue\";\nimport Markdown from \"@/components/Markdown.vue\";\n\nexport default defineComponent({\n  name: \"HelpItem\",\n  components: {\n    Markdown,\n  },\n  props: {\n    message: { type: String, required: true },\n  },\n});\n</script>\n","import { render } from \"./Help.vue?vue&type=template&id=264f967b&ts=true\"\nimport script from \"./Help.vue?vue&type=script&lang=ts\"\nexport * from \"./Help.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-5b828de6\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"app-results\" }\nconst _hoisted_2 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"Output values\", -1))\nconst _hoisted_3 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"h3\", null, \"Preview\", -1))\nconst _hoisted_4 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1))\nconst _hoisted_5 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"h3\", null, \"Code\", -1))\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_Markdown = _resolveComponent(\"Markdown\")!\n  const _component_CodeItem = _resolveComponent(\"CodeItem\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _hoisted_2,\n    _createElementVNode(\"div\", null, [\n      _hoisted_3,\n      _createVNode(_component_Markdown, {\n        class: \"markdown-preview\",\n        content: _ctx.result\n      }, null, 8, [\"content\"])\n    ]),\n    _hoisted_4,\n    _createElementVNode(\"div\", null, [\n      _hoisted_5,\n      _createVNode(_component_CodeItem, { code: _ctx.result }, null, 8, [\"code\"])\n    ])\n  ]))\n}","<template>\n  <!-- Badge Generator output pane -->\n  <div class=\"app-results\">\n    <h2>Output values</h2>\n\n    <div>\n      <h3>Preview</h3>\n\n      <Markdown class=\"markdown-preview\" :content=\"result\"></Markdown>\n    </div>\n\n    <br />\n\n    <div>\n      <h3>Code</h3>\n\n      <CodeItem :code=\"result\" />\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from \"vue\";\n\nimport CodeItem from \"@/components/Code.vue\";\nimport Markdown from \"@/components/Markdown.vue\";\n\nexport default defineComponent({\n  name: \"ResultsItem\",\n  components: {\n    Markdown,\n    CodeItem,\n  },\n  props: {\n    result: { type: String, required: true },\n  },\n});\n</script>\n\n<style scoped>\n.markdown-preview {\n  padding-left: 12px;\n}\n</style>\n","import { render } from \"./Results.vue?vue&type=template&id=5b828de6&scoped=true&ts=true\"\nimport script from \"./Results.vue?vue&type=script&lang=ts\"\nexport * from \"./Results.vue?vue&type=script&lang=ts\"\n\nimport \"./Results.vue?vue&type=style&index=0&id=5b828de6&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-5b828de6\"]])\n\nexport default __exports__","import { toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-de2a2f90\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = [\"for\"]\nconst _hoisted_2 = {\n  key: 0,\n  class: \"required\"\n}\nconst _hoisted_3 = [\"id\", \"value\", \"placeholder\", \"required\", \"disabled\"]\nconst _hoisted_4 = {\n  key: 0,\n  class: \"note\"\n}\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_Markdown = _resolveComponent(\"Markdown\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", null, [\n    _createElementVNode(\"label\", { for: _ctx.slug }, [\n      _createTextVNode(_toDisplayString(_ctx.label), 1),\n      (_ctx.isRequired)\n        ? (_openBlock(), _createElementBlock(\"span\", _hoisted_2, \"*\"))\n        : _createCommentVNode(\"\", true)\n    ], 8, _hoisted_1),\n    _createElementVNode(\"input\", {\n      id: _ctx.slug,\n      type: \"text\",\n      value: _ctx.modelValue,\n      placeholder: _ctx.placeholder,\n      required: _ctx.isRequired,\n      disabled: _ctx.disabled,\n      onInput: _cache[0] || (_cache[0] = ($event: any) => (_ctx.$emit('update:modelValue', $event.target.value)))\n    }, null, 40, _hoisted_3),\n    (_ctx.note)\n      ? (_openBlock(), _createElementBlock(\"small\", _hoisted_4, [\n          _createVNode(_component_Markdown, { content: _ctx.note }, null, 8, [\"content\"])\n        ]))\n      : _createCommentVNode(\"\", true)\n  ]))\n}","<template>\n  <div>\n    <label :for=\"slug\">\n      {{ label }}<span v-if=\"isRequired\" class=\"required\">*</span>\n    </label>\n\n    <input\n      :id=\"slug\"\n      type=\"text\"\n      :value=\"modelValue\"\n      :placeholder=\"placeholder\"\n      :required=\"isRequired\"\n      :disabled=\"disabled\"\n      v-on:input=\"$emit('update:modelValue', $event.target.value)\"\n    />\n\n    <small class=\"note\" v-if=\"note\">\n      <Markdown :content=\"note\"></Markdown>\n    </small>\n  </div>\n</template>\n\n<style scoped>\nlabel {\n  padding-right: 0.5em;\n}\n</style>\n\n<script lang=\"ts\">\nimport { defineComponent } from \"vue\";\n\nimport { slugify } from \"@/lib\";\nimport Markdown from \"@/components/Markdown.vue\";\n\nexport default defineComponent({\n  name: \"TextInput\",\n  components: {\n    Markdown,\n  },\n  props: {\n    label: { type: String, required: true },\n    modelValue: { type: String, required: true },\n    placeholder: { type: String, required: false },\n    isRequired: { type: Boolean, required: false },\n    disabled: { type: Boolean, required: false },\n    note: { type: String, required: false },\n  },\n  computed: {\n    slug(): string {\n      return slugify(\"text\", this.label, this.modelValue);\n    },\n  },\n});\n</script>\n","import { render } from \"./TextInput.vue?vue&type=template&id=de2a2f90&scoped=true&ts=true\"\nimport script from \"./TextInput.vue?vue&type=script&lang=ts\"\nexport * from \"./TextInput.vue?vue&type=script&lang=ts\"\n\nimport \"./TextInput.vue?vue&type=style&index=0&id=de2a2f90&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-de2a2f90\"]])\n\nexport default __exports__","import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, vModelRadio as _vModelRadio, withDirectives as _withDirectives, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"badges container-lg\" }\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"div\", { class: \"row\" }, [\n  /*#__PURE__*/_createElementVNode(\"div\", { class: \"col-12\" }, [\n    /*#__PURE__*/_createElementVNode(\"h1\", null, \"Repo badges\"),\n    /*#__PURE__*/_createElementVNode(\"p\", null, \" Generate shields about your repo and add them to your README.md file. \")\n  ])\n], -1)\nconst _hoisted_3 = { class: \"row\" }\nconst _hoisted_4 = { class: \"col-6\" }\nconst _hoisted_5 = { class: \"app-input\" }\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Input values\", -1)\nconst _hoisted_7 = { name: \"gh-repo\" }\nconst _hoisted_8 = /*#__PURE__*/_createElementVNode(\"legend\", null, \"GitHub repo\", -1)\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1)\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1)\nconst _hoisted_11 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1)\nconst _hoisted_12 = /*#__PURE__*/_createElementVNode(\"label\", null, \"Version type\", -1)\nconst _hoisted_13 = /*#__PURE__*/_createElementVNode(\"label\", { for: \"one\" }, \"Tag\", -1)\nconst _hoisted_14 = /*#__PURE__*/_createElementVNode(\"label\", { for: \"two\" }, \"Release\", -1)\nconst _hoisted_15 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1)\nconst _hoisted_16 = { name: \"display-options\" }\nconst _hoisted_17 = /*#__PURE__*/_createElementVNode(\"legend\", null, \"Display options\", -1)\nconst _hoisted_18 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1)\nconst _hoisted_19 = { name: \"gh-actions\" }\nconst _hoisted_20 = /*#__PURE__*/_createElementVNode(\"legend\", null, \"GitHub Actions workflow\", -1)\nconst _hoisted_21 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1)\nconst _hoisted_22 = /*#__PURE__*/_createElementVNode(\"input\", {\n  class: \"btn\",\n  type: \"submit\",\n  value: \"Submit\"\n}, null, -1)\nconst _hoisted_23 = { class: \"col-6\" }\nconst _hoisted_24 = { class: \"row\" }\nconst _hoisted_25 = { class: \"col-12\" }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_TextInput = _resolveComponent(\"TextInput\")!\n  const _component_Checkbox = _resolveComponent(\"Checkbox\")!\n  const _component_Results = _resolveComponent(\"Results\")!\n  const _component_Help = _resolveComponent(\"Help\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _hoisted_2,\n    _createElementVNode(\"div\", _hoisted_3, [\n      _createElementVNode(\"div\", _hoisted_4, [\n        _createElementVNode(\"div\", _hoisted_5, [\n          _hoisted_6,\n          _createElementVNode(\"form\", {\n            onSubmit: _cache[13] || (_cache[13] = _withModifiers(\n//@ts-ignore\n(...args) => (_ctx.submit && _ctx.submit(...args)), [\"prevent\"]))\n          }, [\n            _createElementVNode(\"fieldset\", _hoisted_7, [\n              _hoisted_8,\n              _createVNode(_component_TextInput, {\n                label: \"Username\",\n                modelValue: _ctx.username,\n                \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((_ctx.username) = $event)),\n                isRequired: \"\"\n              }, null, 8, [\"modelValue\"]),\n              _hoisted_9,\n              _createVNode(_component_TextInput, {\n                label: \"Repo name\",\n                modelValue: _ctx.repoName,\n                \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((_ctx.repoName) = $event)),\n                isRequired: \"\"\n              }, null, 8, [\"modelValue\"]),\n              _hoisted_10,\n              _createVNode(_component_TextInput, {\n                label: \"License\",\n                modelValue: _ctx.licenseType,\n                \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => ((_ctx.licenseType) = $event))\n              }, null, 8, [\"modelValue\"]),\n              _hoisted_11,\n              _createElementVNode(\"div\", null, [\n                _hoisted_12,\n                _createElementVNode(\"span\", null, [\n                  _withDirectives(_createElementVNode(\"input\", {\n                    type: \"radio\",\n                    id: \"one\",\n                    value: \"tag\",\n                    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = ($event: any) => ((_ctx.versionType) = $event))\n                  }, null, 512), [\n                    [_vModelRadio, _ctx.versionType]\n                  ]),\n                  _hoisted_13\n                ]),\n                _createElementVNode(\"span\", null, [\n                  _withDirectives(_createElementVNode(\"input\", {\n                    type: \"radio\",\n                    id: \"two\",\n                    value: \"release\",\n                    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = ($event: any) => ((_ctx.versionType) = $event))\n                  }, null, 512), [\n                    [_vModelRadio, _ctx.versionType]\n                  ]),\n                  _hoisted_14\n                ])\n              ])\n            ]),\n            _hoisted_15,\n            _createElementVNode(\"fieldset\", _hoisted_16, [\n              _hoisted_17,\n              _createVNode(_component_TextInput, {\n                label: \"Color\",\n                modelValue: _ctx.badgeColor,\n                \"onUpdate:modelValue\": _cache[5] || (_cache[5] = ($event: any) => ((_ctx.badgeColor) = $event)),\n                placeholder: \"e.g. blue\",\n                note: _ctx.colorHelp\n              }, null, 8, [\"modelValue\", \"note\"]),\n              _createVNode(_component_Checkbox, {\n                label: \"Social badges\",\n                modelValue: _ctx.addSocialBadges,\n                \"onUpdate:modelValue\": _cache[6] || (_cache[6] = ($event: any) => ((_ctx.addSocialBadges) = $event)),\n                note: \"Show badges about the GitHub repo - not useful for your main README.md on GitHub but these are great for adding to a page on docs site or for linking to your repo from another location you control like a repo or website.\"\n              }, null, 8, [\"modelValue\"]),\n              _createVNode(_component_Checkbox, {\n                label: \"Issues badge\",\n                modelValue: _ctx.addIssues,\n                \"onUpdate:modelValue\": _cache[7] || (_cache[7] = ($event: any) => ((_ctx.addIssues) = $event)),\n                note: \"Add a counter for number of open issues. The color will change based on the count.\"\n              }, null, 8, [\"modelValue\"]),\n              _createVNode(_component_Checkbox, {\n                label: \"Template button\",\n                modelValue: _ctx.useThisTemplate,\n                \"onUpdate:modelValue\": _cache[8] || (_cache[8] = ($event: any) => ((_ctx.useThisTemplate) = $event)),\n                note: \"Add a <i>Use This Template</i> button.\"\n              }, null, 8, [\"modelValue\"]),\n              _createVNode(_component_Checkbox, {\n                label: \"GH Pages button\",\n                modelValue: _ctx.ghPages,\n                \"onUpdate:modelValue\": _cache[9] || (_cache[9] = ($event: any) => ((_ctx.ghPages) = $event)),\n                note: \"Add a link to a GitHub Pages site.\"\n              }, null, 8, [\"modelValue\"]),\n              _createVNode(_component_Checkbox, {\n                label: \"Documentation section\",\n                modelValue: _ctx.addDocsSection,\n                \"onUpdate:modelValue\": _cache[10] || (_cache[10] = ($event: any) => ((_ctx.addDocsSection) = $event)),\n                note: \"Add heading and content around documentation.\"\n              }, null, 8, [\"modelValue\"]),\n              _createVNode(_component_Checkbox, {\n                label: \"License section\",\n                modelValue: _ctx.addLicenseSection,\n                \"onUpdate:modelValue\": _cache[11] || (_cache[11] = ($event: any) => ((_ctx.addLicenseSection) = $event)),\n                note: \"Add heading and content around license. If enabled, the license badge at the top of the page will point to this section on the page, otherwise it will point to the full URL of the license file.\"\n              }, null, 8, [\"modelValue\"])\n            ]),\n            _hoisted_18,\n            _createElementVNode(\"fieldset\", _hoisted_19, [\n              _hoisted_20,\n              _createVNode(_component_TextInput, {\n                label: \"Name\",\n                modelValue: _ctx.workflowName,\n                \"onUpdate:modelValue\": _cache[12] || (_cache[12] = ($event: any) => ((_ctx.workflowName) = $event)),\n                placeholder: \"e.g. Node CI\",\n                note: \"From the \\\"name\\\" field of a GH Actions workflow file. For the default repo settings, you can use \\\"GH Pages Deploy\\\".\"\n              }, null, 8, [\"modelValue\"])\n            ]),\n            _hoisted_21,\n            _hoisted_22\n          ], 32)\n        ])\n      ]),\n      _createElementVNode(\"div\", _hoisted_23, [\n        _createVNode(_component_Results, { result: _ctx.result }, null, 8, [\"result\"])\n      ])\n    ]),\n    _createElementVNode(\"div\", _hoisted_24, [\n      _createElementVNode(\"div\", _hoisted_25, [\n        _createVNode(_component_Help, { message: _ctx.note }, null, 8, [\"message\"])\n      ])\n    ])\n  ]))\n}","<template>\n  <div class=\"badges container-lg\">\n    <div class=\"row\">\n      <div class=\"col-12\">\n        <h1>Repo badges</h1>\n\n        <p>\n          Generate shields about your repo and add them to your README.md file.\n        </p>\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-6\">\n        <div class=\"app-input\">\n          <h2>Input values</h2>\n\n          <form @submit.prevent.enter=\"submit\">\n            <fieldset name=\"gh-repo\">\n              <legend>GitHub repo</legend>\n\n              <TextInput label=\"Username\" v-model=\"username\" isRequired />\n              <br />\n\n              <TextInput label=\"Repo name\" v-model=\"repoName\" isRequired />\n              <br />\n\n              <TextInput label=\"License\" v-model=\"licenseType\" />\n              <br />\n\n              <div>\n                <label>Version type</label>\n\n                <span>\n                  <input\n                    type=\"radio\"\n                    id=\"one\"\n                    value=\"tag\"\n                    v-model=\"versionType\"\n                  />\n                  <label for=\"one\">Tag</label>\n                </span>\n\n                <span>\n                  <input\n                    type=\"radio\"\n                    id=\"two\"\n                    value=\"release\"\n                    v-model=\"versionType\"\n                  />\n                  <label for=\"two\">Release</label>\n                </span>\n              </div>\n            </fieldset>\n            <br />\n\n            <fieldset name=\"display-options\">\n              <legend>Display options</legend>\n\n              <TextInput\n                label=\"Color\"\n                v-model=\"badgeColor\"\n                placeholder=\"e.g. blue\"\n                :note=\"colorHelp\"\n              />\n\n              <Checkbox\n                label=\"Social badges\"\n                v-model=\"addSocialBadges\"\n                note=\"Show badges about the GitHub repo - not useful for your main README.md on GitHub but these are great for adding to a page on docs site or for linking to your repo from another location you control like a repo or website.\"\n              />\n\n              <Checkbox\n                label=\"Issues badge\"\n                v-model=\"addIssues\"\n                note=\"Add a counter for number of open issues. The color will change based on the count.\"\n              />\n\n              <Checkbox\n                label=\"Template button\"\n                v-model=\"useThisTemplate\"\n                note=\"Add a <i>Use This Template</i> button.\"\n              />\n\n              <Checkbox\n                label=\"GH Pages button\"\n                v-model=\"ghPages\"\n                note=\"Add a link to a GitHub Pages site.\"\n              />\n\n              <Checkbox\n                label=\"Documentation section\"\n                v-model=\"addDocsSection\"\n                note=\"Add heading and content around documentation.\"\n              />\n\n              <Checkbox\n                label=\"License section\"\n                v-model=\"addLicenseSection\"\n                note=\"Add heading and content around license. If enabled, the license badge at the top of the page will point to this section on the page, otherwise it will point to the full URL of the license file.\"\n              />\n            </fieldset>\n            <br />\n\n            <fieldset name=\"gh-actions\">\n              <legend>GitHub Actions workflow</legend>\n\n              <TextInput\n                label=\"Name\"\n                v-model=\"workflowName\"\n                placeholder=\"e.g. Node CI\"\n                note='From the \"name\" field of a GH Actions workflow file. For the default repo settings, you can use \"GH Pages Deploy\".'\n              />\n            </fieldset>\n            <br />\n\n            <input class=\"btn\" type=\"submit\" value=\"Submit\" />\n          </form>\n        </div>\n      </div>\n\n      <div class=\"col-6\">\n        <Results :result=\"result\" />\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-12\">\n        <Help :message=\"note\" />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from \"vue\";\n\nimport { DEBUG } from \"@/constants/\";\nimport { COLOR_PRESETS } from \"@/constants/appearance\";\nimport { DEFAULT_REPO_INPUTS } from \"@/constants/badgeValues\";\nimport { COLOR_HELP, INITIAL_RESULT } from \"@/constants/text\";\n\nimport Help from \"@/components/Help.vue\";\nimport Checkbox from \"@/components/Checkbox.vue\";\nimport Results from \"@/components/Results.vue\";\nimport TextInput from \"@/components/TextInput.vue\";\n\nimport { Repo } from \"@/core/Repo\";\nimport { TagTypes } from \"@/core/Repo.d\";\nimport { statusBadge } from \"@/core/ghActions\";\nimport store from \"@/store\";\n\nconst note = `\n- Where to put the repo metadata badges.\n    - In your \\`README.md\\` file.\n- Where to put the social badges.\n    - On a docs site to link back to your repo.\n    - Link to a repo you don't own - such as if you want to link to the Vue repo and show its star count.\n- The first social badge has fixed display logic - so make sure you enter a valid repo as the badge can't tell you it is broken. A positive of this is that it works to point to private repos.\n- If you want to always how the latest tag, even if it has _no release_ yet, use the Tag badge. Otherwise, use the Release badge.\n- For centered badges - note that the HTML \\`align\\` attribute is being deprecated in favor of CSS. But in markdown on GitHub you cannot set CSS even inline and so must use the \\`align\\` attribute.\n\nIf you need more content for the body of your README.md or doc files, check out this generic template:\n\n- [![MichaelCurrin - generic-project-template](https://img.shields.io/static/v1?label=MichaelCurrin&message=generic-project-template&color=blue&logo=github)](https://github.com/MichaelCurrin/generic-project-template)\n`;\n\nexport default defineComponent({\n  name: \"RepoBadges\",\n  components: {\n    Checkbox,\n    Help,\n    Results,\n    TextInput,\n  },\n  data() {\n    const versionType: TagTypes = \"tag\";\n\n    return {\n      username: store.getRepoUsername(),\n      repoName: store.getRepoName(),\n      licenseType: DEFAULT_REPO_INPUTS.licenseType,\n\n      addSocialBadges: false,\n      addIssues: false,\n      useThisTemplate: false,\n      ghPages: false,\n      addDocsSection: true,\n      addLicenseSection: true,\n      badgeColor: COLOR_PRESETS.Default,\n      workflowName: \"\",\n\n      versionType,\n\n      result: INITIAL_RESULT,\n      note,\n      colorHelp: COLOR_HELP,\n    };\n  },\n  methods: {\n    submit() {\n      if (DEBUG) {\n        console.debug(\"Process inputs and render results\");\n        console.debug({\n          username: this.username,\n          repoName: this.repoName,\n          licenseType: this.licenseType,\n          useThisTemplate: this.useThisTemplate,\n          versionType: this.versionType,\n          ghPages: this.ghPages,\n          workflowName: this.workflowName,\n          badgeColor: this.badgeColor,\n        });\n      }\n\n      store.setRepoUsername(this.username);\n      store.setRepoName(this.repoName);\n\n      const repo = new Repo(\n        this.username,\n        this.repoName,\n        this.licenseType,\n        this.badgeColor\n      );\n\n      let socialBadges = \"\";\n      if (this.addSocialBadges) {\n        const repoBadge = repo.ghBadge();\n        const starsBadge = repo.ghCounterBadge(\"stars\");\n        const forksBadge = repo.ghCounterBadge(\"forks\");\n        socialBadges = `\\\n_Social buttons_\n\n${repoBadge}\n${starsBadge}\n${forksBadge}\n`;\n      }\n\n      const ghActionsBadge = this.workflowName\n        ? statusBadge(repo, this.workflowName)\n        : \"\";\n      const versionBadge = repo.tagBadge(this.versionType as TagTypes);\n\n      const useLocalLicense = this.addLicenseSection;\n      const licenseBadge = repo.licenseBadge(useLocalLicense);\n      const issuesBadge = this.addIssues ? repo.ghCounterBadge(\"issues\") : \"\";\n\n      const templateButton = this.useThisTemplate\n        ? repo.useThisTemplateBadge()\n        : \"\";\n      // For now just GH pages but can be extended to have badges focused on\n      // docs. A custom URL independent of repo can be generated in a separate\n      // section or maybe here - just add output URL and assume the other data.\n      const ghPagesButton = this.ghPages ? repo.ghPagesBadge() : \"\";\n\n      const documentationMessage = this.addDocsSection\n        ? repo.documentationMessage()\n        : \"\";\n      const licenseMessage = this.addLicenseSection\n        ? repo.licenseMessage()\n        : \"\";\n\n      this.result = `\\\n${socialBadges}\n\n_Repo metadata_\n\n${ghActionsBadge}\n${versionBadge}\n${licenseBadge}\n${issuesBadge}\n\n_Call-to-Action buttons_\n\n<div align=\"center\">\n\n${templateButton}\n\n${ghPagesButton}\n\n</div>\n\n${documentationMessage}\n\n${licenseMessage}`;\n    },\n  },\n});\n</script>\n","/**\n * Generate a status badge around GH Actions.\n *\n * In GitHub on the Actions tab, go to a workflow run and under options on the\n * right choose \"Create status badge\". This is added to this generator project\n * for convenience. Plus with a smart target URL added.\n */\nimport { TGHWorkflow } from \"./ghActions.d\";\nimport { mdImageWithLink } from \"./markdown\";\nimport { Repo } from \"./Repo\";\n\n/**\n * Create URL for a GH Actions CI status badge.\n *\n * Note that \"+\" does not work in place of a space, so \"%20\" must be used.\n */\nexport function _statusBadgeUrl({ ghURL, workflowName }: TGHWorkflow) {\n  const encodedName = encodeURIComponent(workflowName);\n\n  return `${ghURL}/workflows/${encodedName}/badge.svg`;\n}\n\n/**\n * Create URL to view runs for a workflow name.\n *\n * Note that this  not need encoding - GitHub handles the unescaped\n * colon and quotes fine.\n */\nexport function _statusTargetUrl({ ghURL, workflowName }: TGHWorkflow) {\n  const encodedName = workflowName.replace(/ /g, \"+\");\n\n  return `${ghURL}/actions?query=workflow:\"${encodedName}\"`;\n}\n\n/**\n * Return data needed to make a GH Actions CI badge.\n */\nexport function _statusData({ ghURL, workflowName }: TGHWorkflow) {\n  return {\n    altText: workflowName,\n    imageTarget: _statusBadgeUrl({ ghURL, workflowName }),\n    linkTarget: _statusTargetUrl({ ghURL, workflowName }),\n  };\n}\n\n/**\n * Return markdown text for a GH Actions status badge.\n *\n * Workflow names comes from the `name` value at the top of your YAML file. The\n * actual filename is irrelevant.\n */\nexport function statusBadge(repo: Repo, workflowName: string) {\n  const ghURL = repo.ghURL();\n  const fields = _statusData({ ghURL, workflowName });\n\n  return mdImageWithLink(fields);\n}\n","import { render } from \"./RepoBadges.vue?vue&type=template&id=83639fca&ts=true\"\nimport script from \"./RepoBadges.vue?vue&type=script&lang=ts\"\nexport * from \"./RepoBadges.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["INITIAL_RESULT","COLOR_HELP","LOGO_HELP","LOGO_COLOR_HELP","stripLeadingSlash","value","replace","slugify","values","join","toLowerCase","_hoisted_1","_hoisted_2","_hoisted_3","class","render","_ctx","_cache","$props","$setup","$data","$options","_component_Markdown","for","slug","label","id","type","checked","modelValue","$emit","$event","target","note","content","name","components","Markdown","props","String","required","Boolean","computed","this","__exports__","_component_Checkbox","asHtml","ref","outputCode","Checkbox","code","data","htmlCode","methods","highlight","block","$refs","codeBlock","mounted","updated","message","_withScopeId","n","_hoisted_4","_hoisted_5","_component_CodeItem","result","CodeItem","isRequired","placeholder","disabled","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_21","_hoisted_22","_hoisted_23","_hoisted_24","_hoisted_25","_component_TextInput","_component_Results","_component_Help","args","submit","username","repoName","licenseType","versionType","badgeColor","colorHelp","addSocialBadges","addIssues","useThisTemplate","ghPages","addDocsSection","addLicenseSection","workflowName","_statusBadgeUrl","ghURL","encodedName","encodeURIComponent","_statusTargetUrl","_statusData","altText","imageTarget","linkTarget","statusBadge","repo","fields","Help","Results","TextInput","store","getRepoUsername","getRepoName","Default","console","debug","setRepoUsername","setRepoName","Repo","socialBadges","repoBadge","ghBadge","starsBadge","ghCounterBadge","forksBadge","ghActionsBadge","versionBadge","tagBadge","useLocalLicense","licenseBadge","issuesBadge","templateButton","useThisTemplateBadge","ghPagesButton","ghPagesBadge","documentationMessage","licenseMessage"],"sourceRoot":""}
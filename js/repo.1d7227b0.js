"use strict";(self["webpackChunkbadge_generator"]=self["webpackChunkbadge_generator"]||[]).push([[150],{2211:function(e,n,o){o.d(n,{e:function(){return t}});const t=!1},99:function(e,n,o){o.d(n,{I9:function(){return a},PL:function(){return l},Wn:function(){return r},t$:function(){return t}});const t="_Your output will appear here_",l="Color keyword or hex code. Hints: `brightgreen`, `green`, `yellowgreen`, `yellow`, `orange`, `red`, `blue`, `lightgrey`, `success`, `important`, `critical`, `informational`, `inactive`, `blueviolet`, `ff69b4`, `9cf`, `2ea44f` (GitHub's green). The Shields.io API will use `blue` as a default if no color is provided.",a="Supports values like `dependabot`, `discord` and `npm`. And hundreds of logos from [SimpleIcons](https://simpleicons.org/) such as `python`, `node.js` and `visual-studio-code`",r="Color keyword or hex code. The badge's own color will be used unless you specify an override. Using `white` is great for readability against the dark label background."},6742:function(e,n,o){function t(e){return e.replace(/^\/+/,"")}function l(...e){const n=e.join("-");return n.replace(/^\s+|\s+$/g,"").toLowerCase().replace(/[^a-z0-9 -]/g,"").replace(/\s+/g,"-").replace(/-+/g,"-")}o.d(n,{F:function(){return t},l:function(){return l}})},5638:function(e,n,o){var t=o(2211),l=o(1409),a=o(2262);const r={state:(0,a.qj)({repoUsername:l.dU.username,repoName:l.dU.repoName}),setRepoUsername(e){t.e&&console.debug(`Storing repo username: ${e}`),this.state.repoUsername=e},setRepoName(e){t.e&&console.debug(`Storing repo name: ${e}`),this.state.repoName=e}};n["Z"]=r},9771:function(e,n,o){o.d(n,{Z:function(){return g}});var t=o(6252),l=o(3577);const a=["for"],r=["id","checked"],s={key:0,class:"note"};function u(e,n,o,u,i,d){const c=(0,t.up)("Markdown");return(0,t.wg)(),(0,t.iD)("div",null,[(0,t._)("label",{for:e.slug},(0,l.zw)(e.label),9,a),(0,t._)("input",{id:e.slug,type:"checkbox",checked:e.modelValue,onChange:n[0]||(n[0]=n=>e.$emit("update:modelValue",n.target.checked))},null,40,r),e.note?((0,t.wg)(),(0,t.iD)("small",s,[(0,t.Wm)(c,{content:e.note},null,8,["content"])])):(0,t.kq)("",!0)])}var i=o(3945),d=o(6742),c=(0,t.aZ)({name:"CheckboxItem",components:{Markdown:i.Z},props:{label:{type:String,required:!0},modelValue:{type:Boolean,required:!1},note:{type:String,required:!1}},computed:{slug(){return(0,d.l)("box",this.label)}}}),p=o(3744);const m=(0,p.Z)(c,[["render",u]]);var g=m},816:function(e,n,o){o.d(n,{Z:function(){return g}});var t=o(6252),l=o(3577);const a=(0,t._)("br",null,null,-1);function r(e,n,o,r,s,u){const i=(0,t.up)("Checkbox");return(0,t.wg)(),(0,t.iD)("div",null,[(0,t.Wm)(i,{label:"Show HTML",modelValue:e.asHtml,"onUpdate:modelValue":n[0]||(n[0]=n=>e.asHtml=n)},null,8,["modelValue"]),a,(0,t._)("pre",null,[(0,t._)("code",{ref:"codeBlock",class:"markdown"},(0,l.zw)(e.outputCode),513)])])}var s=o(7869),u=o.n(s),i=o(770),d=o(9771),c=(0,t.aZ)({name:"CodeItem",components:{Checkbox:d.Z},props:{code:{type:String,required:!0}},data(){return{asHtml:!1}},computed:{outputCode(){if(this.asHtml){const e=(0,i.Ae)(this.code);return(0,i.ZF)(e)}return this.code}},methods:{highlight(){const e=this.$refs.codeBlock;u().highlightElement(e)}},mounted(){this.highlight()},updated(){this.highlight()}}),p=o(3744);const m=(0,p.Z)(c,[["render",r]]);var g=m},8526:function(e,n,o){o.d(n,{Z:function(){return c}});var t=o(6252);const l={class:"app-notes"},a=(0,t._)("h2",null,"Notes",-1);function r(e,n,o,r,s,u){const i=(0,t.up)("Markdown");return(0,t.wg)(),(0,t.iD)("div",l,[a,(0,t._)("p",null,[(0,t.Wm)(i,{content:e.message},null,8,["content"])])])}var s=o(3945),u=(0,t.aZ)({name:"HelpItem",components:{Markdown:s.Z},props:{message:{type:String,required:!0}}}),i=o(3744);const d=(0,i.Z)(u,[["render",r]]);var c=d},1684:function(e,n,o){o.d(n,{Z:function(){return b}});var t=o(6252);const l=e=>((0,t.dD)("data-v-61651334"),e=e(),(0,t.Cn)(),e),a={class:"app-results"},r=l((()=>(0,t._)("h2",null,"Output values",-1))),s=l((()=>(0,t._)("h3",null,"Preview",-1))),u=l((()=>(0,t._)("br",null,null,-1))),i=l((()=>(0,t._)("h3",null,"Code",-1)));function d(e,n,o,l,d,c){const p=(0,t.up)("Markdown"),m=(0,t.up)("Code");return(0,t.wg)(),(0,t.iD)("div",a,[r,(0,t._)("div",null,[s,(0,t.Wm)(p,{class:"markdown-preview",content:e.result},null,8,["content"])]),u,(0,t._)("div",null,[i,(0,t.Wm)(m,{code:e.result},null,8,["code"])])])}var c=o(816),p=o(3945),m=(0,t.aZ)({name:"ResultsItem",components:{Markdown:p.Z,Code:c.Z},props:{result:{type:String,required:!0}}}),g=o(3744);const h=(0,g.Z)(m,[["render",d],["__scopeId","data-v-61651334"]]);var b=h},6688:function(e,n,o){o.d(n,{Z:function(){return h}});var t=o(6252),l=o(3577);const a=["for"],r={key:0,class:"required"},s=["id","value","placeholder","required","disabled"],u={key:0,class:"note"};function i(e,n,o,i,d,c){const p=(0,t.up)("Markdown");return(0,t.wg)(),(0,t.iD)("div",null,[(0,t._)("label",{for:e.slug},[(0,t.Uk)((0,l.zw)(e.label),1),e.isRequired?((0,t.wg)(),(0,t.iD)("span",r,"*")):(0,t.kq)("",!0)],8,a),(0,t._)("input",{id:e.slug,type:"text",value:e.modelValue,placeholder:e.placeholder,required:e.isRequired,disabled:e.disabled,onInput:n[0]||(n[0]=n=>e.$emit("update:modelValue",n.target.value))},null,40,s),e.note?((0,t.wg)(),(0,t.iD)("small",u,[(0,t.Wm)(p,{content:e.note},null,8,["content"])])):(0,t.kq)("",!0)])}var d=o(6742),c=o(3945),p=(0,t.aZ)({name:"TextInput",components:{Markdown:c.Z},props:{label:{type:String,required:!0},modelValue:{type:String,required:!0},placeholder:{type:String,required:!1},isRequired:{type:Boolean,required:!1},disabled:{type:Boolean,required:!1},note:{type:String,required:!1}},computed:{slug(){return(0,d.l)("text",this.label,this.modelValue)}}}),m=o(3744);const g=(0,m.Z)(p,[["render",i],["__scopeId","data-v-de2a2f90"]]);var h=g},4424:function(e,n,o){o.r(n),o.d(n,{default:function(){return Y}});var t=o(6252),l=o(9963);const a={class:"badges container-lg"},r=(0,t._)("div",{class:"row"},[(0,t._)("div",{class:"col-12"},[(0,t._)("h1",null,"Repo badges"),(0,t._)("p",null," Generate shields about your repo and add them to your README.md file. ")])],-1),s={class:"row"},u={class:"col-6"},i={class:"app-input"},d=(0,t._)("h2",null,"Input values",-1),c={name:"gh-repo"},p=(0,t._)("legend",null,"GitHub repo",-1),m=(0,t._)("br",null,null,-1),g=(0,t._)("br",null,null,-1),h=(0,t._)("br",null,null,-1),b=(0,t._)("label",null,"Version type",-1),f=(0,t._)("label",{for:"one"},"Tag",-1),w=(0,t._)("label",{for:"two"},"Release",-1),v=(0,t._)("br",null,null,-1),y={name:"display-options"},k=(0,t._)("legend",null,"Display options",-1),_=(0,t._)("br",null,null,-1),T={name:"gh-actions"},V=(0,t._)("legend",null,"GitHub Actions workflow",-1),C=(0,t._)("br",null,null,-1),Z=(0,t._)("input",{class:"btn",type:"submit",value:"Submit"},null,-1),U={class:"col-6"},N={class:"row"},R={class:"col-12"};function q(e,n,o,q,I,$){const S=(0,t.up)("TextInput"),M=(0,t.up)("Checkbox"),H=(0,t.up)("Results"),W=(0,t.up)("Help");return(0,t.wg)(),(0,t.iD)("div",a,[r,(0,t._)("div",s,[(0,t._)("div",u,[(0,t._)("div",i,[d,(0,t._)("form",{onSubmit:n[10]||(n[10]=(0,l.iM)(((...n)=>e.submit&&e.submit(...n)),["prevent"]))},[(0,t._)("fieldset",c,[p,(0,t.Wm)(S,{label:"Username",modelValue:e.username,"onUpdate:modelValue":n[0]||(n[0]=n=>e.username=n),isRequired:""},null,8,["modelValue"]),m,(0,t.Wm)(S,{label:"Repo name",modelValue:e.repoName,"onUpdate:modelValue":n[1]||(n[1]=n=>e.repoName=n),isRequired:""},null,8,["modelValue"]),g,(0,t.Wm)(S,{label:"License",modelValue:e.licenseType,"onUpdate:modelValue":n[2]||(n[2]=n=>e.licenseType=n)},null,8,["modelValue"]),h,(0,t._)("div",null,[b,(0,t._)("span",null,[(0,t.wy)((0,t._)("input",{type:"radio",id:"one",value:"tag","onUpdate:modelValue":n[3]||(n[3]=n=>e.versionType=n)},null,512),[[l.G2,e.versionType]]),f]),(0,t._)("span",null,[(0,t.wy)((0,t._)("input",{type:"radio",id:"two",value:"release","onUpdate:modelValue":n[4]||(n[4]=n=>e.versionType=n)},null,512),[[l.G2,e.versionType]]),w])])]),v,(0,t._)("fieldset",y,[k,(0,t.Wm)(S,{label:"Color",modelValue:e.badgeColor,"onUpdate:modelValue":n[5]||(n[5]=n=>e.badgeColor=n),placeholder:"e.g. blue",note:e.colorHelp},null,8,["modelValue","note"]),(0,t.Wm)(M,{label:"Template button",modelValue:e.useThisTemplate,"onUpdate:modelValue":n[6]||(n[6]=n=>e.useThisTemplate=n),note:"Add a <i>Use This Template</i> button."},null,8,["modelValue"]),(0,t.Wm)(M,{label:"GH Pages button",modelValue:e.ghPages,"onUpdate:modelValue":n[7]||(n[7]=n=>e.ghPages=n),note:"Add a link to a GitHub Pages site."},null,8,["modelValue"]),(0,t.Wm)(M,{label:"Issues badge",modelValue:e.addIssues,"onUpdate:modelValue":n[8]||(n[8]=n=>e.addIssues=n),note:"Add a counter for number of open issues. The color will change based on the count."},null,8,["modelValue"])]),_,(0,t._)("fieldset",T,[V,(0,t.Wm)(S,{label:"Name",modelValue:e.workflowName,"onUpdate:modelValue":n[9]||(n[9]=n=>e.workflowName=n),placeholder:"e.g. Node CI",note:'From the "name" field of a GH Actions workflow file. For the default repo settings, you can use "GH Pages Deploy".'},null,8,["modelValue"])]),C,Z],32)])]),(0,t._)("div",U,[(0,t.Wm)(H,{result:e.result},null,8,["result"])])]),(0,t._)("div",N,[(0,t._)("div",R,[(0,t.Wm)(W,{message:e.note},null,8,["message"])])])])}var I=o(2211),$=o(9930),S=o(99),M=o(8526),H=o(9771),W=o(1684),x=o(6688),D=o(8209),B=o(770);function P({ghURL:e,workflowName:n}){const o=encodeURIComponent(n);return`${e}/workflows/${o}/badge.svg`}function A({ghURL:e,workflowName:n}){const o=n.replace(/ /g,"+");return`${e}/actions?query=workflow:"${o}"`}function L({ghURL:e,workflowName:n}){return{altText:n,imageTarget:P({ghURL:e,workflowName:n}),linkTarget:A({ghURL:e,workflowName:n})}}function G(e,n){const o=e.ghURL(),t=L({ghURL:o,workflowName:n});return(0,B.ad)(t)}var E=o(5638);const j="\n- Where to put the repo metadata badges.\n    - In your `README.md` file.\n- Where to put the social badges.\n    - On a docs site to link back to your repo.\n    - Link to a repo you don't own - such as if you want to link to the Vue repo and show its star count.\n- The first social badge has fixed display logic - so make sure you enter a valid repo as the badge can't tell you it is broken. A positive of this is that it works to point to private repos.\n- If you want to always how the latest tag, even if it has _no release_ yet, use the Tag badge. Otherwise, use the Release badge.\n- For centered badges - note that the HTML `align` attribute is being deprecated in favor of CSS. But in markdown on GitHub you cannot set CSS even inline and so must use the `align` attribute.\n\nIf you need more content for the body of your README.md or doc files, check out this generic template:\n\n- [![MichaelCurrin - generic-project-template](https://img.shields.io/static/v1?label=MichaelCurrin&message=generic-project-template&color=blue&logo=github)](https://github.com/MichaelCurrin/generic-project-template)\n";var F=(0,t.aZ)({name:"RepoBadges",components:{Checkbox:H.Z,Help:M.Z,Results:W.Z,TextInput:x.Z},data(){return{username:E.Z.state.repoUsername,repoName:E.Z.state.repoName,licenseType:"MIT",useThisTemplate:!1,ghPages:!1,addIssues:!1,badgeColor:$.b0.Default,workflowName:"",versionType:"tag",result:S.t$,note:j,colorHelp:S.PL}},methods:{submit(){I.e&&(console.debug("Process inputs and render results"),console.debug({username:this.username,repoName:this.repoName,licenseType:this.licenseType,useThisTemplate:this.useThisTemplate,versionType:this.versionType,ghPages:this.ghPages,workflowName:this.workflowName,badgeColor:this.badgeColor})),E.Z.setRepoUsername(this.username),E.Z.setRepoName(this.repoName);const e=new D.MA(this.username,this.repoName,this.licenseType,this.badgeColor),n=this.workflowName?G(e,this.workflowName):"",o=e.tagBadge(this.versionType),t=e.licenseBadge(!0),l=e.ghBadge(),a=e.ghCounterBadge("stars"),r=e.ghCounterBadge("forks"),s=this.addIssues?e.ghCounterBadge("issues"):"",u=this.useThisTemplate?e.useThisTemplateBadge():"",i=this.ghPages?e.ghPagesBadge():"",d=e.documentationMessage(),c=e.licenseMessage();this.result=`_Social buttons_\n\n${l}\n${a}\n${r}\n\n_Repo metadata_\n\n${n}\n${o}\n${t}\n${s}\n\n_Call-to-Action buttons_\n\n<div align="center">\n\n${u}\n\n${i}\n\n</div>\n\n${d}\n\n${c}`}}}),z=o(3744);const O=(0,z.Z)(F,[["render",q]]);var Y=O}}]);
//# sourceMappingURL=repo.1d7227b0.js.map
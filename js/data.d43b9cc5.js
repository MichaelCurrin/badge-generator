"use strict";(self["webpackChunkbadge_generator"]=self["webpackChunkbadge_generator"]||[]).push([[543],{6971:function(e,t,n){n.d(t,{AM:function(){return o},BI:function(){return l},Y9:function(){return a},mC:function(){return r}});const l="_Your output will appear here_",o="Custom color for some badges on this page which use this value. Must be a keyword or hex code. <br>Hints: `brightgreen`, `green`, `yellowgreen`, `yellow`, `orange`, `red`, `blue`, `lightgrey`, `success`, `important`, `critical`, `informational`, `inactive`, `blueviolet`, `ff69b4`, `9cf`, `2ea44f` (GitHub's green). <br>The Shields.io API will use `blue` as a default if no color is provided.",r="Supports values like `dependabot`, `discord` and `npm`. And hundreds of logos from [SimpleIcons](https://simpleicons.org/) such as `python`, `node.js` and `visual-studio-code`",a="Color keyword or hex code. The badge's own color will be used unless you specify an override. Using `white` is great for readability against the dark label background."},5755:function(e,t,n){function l(e){return e.replace(/^\/+/,"")}function o(...e){const t=e.join("-");return t.replace(/^\s+|\s+$/g,"").toLowerCase().replace(/[^a-z0-9 -]/g,"").replace(/\s+/g,"-").replace(/-+/g,"-")}n.d(t,{Y:function(){return o},g:function(){return l}})},3654:function(e,t,n){n.d(t,{A:function(){return g}});var l=n(641),o=n(33);const r=["for"],a=["id","checked"],u={key:0,class:"note"};function s(e,t,n,s,i,d){const c=(0,l.g2)("Markdown");return(0,l.uX)(),(0,l.CE)("div",null,[(0,l.Lk)("label",{for:e.slug},(0,o.v_)(e.label),9,r),(0,l.Lk)("input",{id:e.slug,type:"checkbox",checked:e.modelValue,onChange:t[0]||(t[0]=t=>e.$emit("update:modelValue",t.target.checked))},null,40,a),e.note?((0,l.uX)(),(0,l.CE)("small",u,[(0,l.bF)(c,{content:e.note},null,8,["content"])])):(0,l.Q3)("",!0)])}var i=n(118),d=n(5755),c=(0,l.pM)({name:"CheckboxItem",components:{Markdown:i.A},props:{label:{type:String,required:!0},modelValue:{type:Boolean,required:!1},note:{type:String,required:!1}},computed:{slug(){return(0,d.Y)("box",this.label)}}}),p=n(6262);const m=(0,p.A)(c,[["render",s]]);var g=m},8495:function(e,t,n){n.d(t,{A:function(){return m}});var l=n(641),o=n(33);function r(e,t,n,r,a,u){const s=(0,l.g2)("Checkbox");return(0,l.uX)(),(0,l.CE)("div",null,[(0,l.bF)(s,{label:"Show HTML",modelValue:e.asHtml,"onUpdate:modelValue":t[0]||(t[0]=t=>e.asHtml=t)},null,8,["modelValue"]),t[1]||(t[1]=(0,l.Lk)("br",null,null,-1)),(0,l.Lk)("pre",null,[(0,l.Lk)("code",{ref:"codeBlock",class:"markdown"},(0,o.v_)(e.outputCode),513)])])}var a=n(948),u=n.n(a),s=n(6821),i=n(3654),d=(0,l.pM)({name:"CodeItem",components:{Checkbox:i.A},props:{code:{type:String,required:!0}},data(){return{asHtml:!1}},computed:{outputCode(){if(this.asHtml){const e=(0,s.sj)(this.code);return(0,s.bS)(e)}return this.code}},methods:{highlight(){const e=this.$refs.codeBlock;u().highlightElement(e)}},mounted(){this.highlight()},updated(){this.highlight()}}),c=n(6262);const p=(0,c.A)(d,[["render",r]]);var m=p},5340:function(e,t,n){n.d(t,{A:function(){return d}});var l=n(641);const o={class:"app-notes"};function r(e,t,n,r,a,u){const s=(0,l.g2)("Markdown");return(0,l.uX)(),(0,l.CE)("div",o,[t[0]||(t[0]=(0,l.Lk)("h2",null,"Notes",-1)),(0,l.Lk)("p",null,[(0,l.bF)(s,{content:e.message},null,8,["content"])])])}var a=n(118),u=(0,l.pM)({name:"HelpItem",components:{Markdown:a.A},props:{message:{type:String,required:!0}}}),s=n(6262);const i=(0,s.A)(u,[["render",r]]);var d=i},5558:function(e,t,n){n.d(t,{A:function(){return c}});var l=n(641);const o={class:"app-results"};function r(e,t,n,r,a,u){const s=(0,l.g2)("Markdown"),i=(0,l.g2)("CodeItem");return(0,l.uX)(),(0,l.CE)("div",o,[t[2]||(t[2]=(0,l.Lk)("h2",null,"Output values",-1)),(0,l.Lk)("div",null,[t[0]||(t[0]=(0,l.Lk)("h3",null,"Preview",-1)),(0,l.bF)(s,{class:"markdown-preview",content:e.result},null,8,["content"])]),t[3]||(t[3]=(0,l.Lk)("br",null,null,-1)),(0,l.Lk)("div",null,[t[1]||(t[1]=(0,l.Lk)("h3",null,"Code",-1)),(0,l.bF)(i,{code:e.result},null,8,["code"])])])}var a=n(8495),u=n(118),s=(0,l.pM)({name:"ResultsItem",components:{Markdown:u.A,CodeItem:a.A},props:{result:{type:String,required:!0}}}),i=n(6262);const d=(0,i.A)(s,[["render",r],["__scopeId","data-v-5b828de6"]]);var c=d},620:function(e,t,n){n.d(t,{A:function(){return h}});var l=n(641),o=n(33);const r=["for"],a={key:0,class:"required"},u=["id","value","placeholder","required","disabled"],s={key:0,class:"note"};function i(e,t,n,i,d,c){const p=(0,l.g2)("Markdown");return(0,l.uX)(),(0,l.CE)("div",null,[(0,l.Lk)("label",{for:e.slug},[(0,l.eW)((0,o.v_)(e.label),1),e.isRequired?((0,l.uX)(),(0,l.CE)("span",a,"*")):(0,l.Q3)("",!0)],8,r),(0,l.Lk)("input",{id:e.slug,type:"text",value:e.modelValue,placeholder:e.placeholder,required:e.isRequired,disabled:e.disabled,onInput:t[0]||(t[0]=t=>e.$emit("update:modelValue",t.target.value))},null,40,u),e.note?((0,l.uX)(),(0,l.CE)("small",s,[(0,l.bF)(p,{content:e.note},null,8,["content"])])):(0,l.Q3)("",!0)])}var d=n(5755),c=n(118),p=(0,l.pM)({name:"TextInput",components:{Markdown:c.A},props:{label:{type:String,required:!0},modelValue:{type:String,required:!0},placeholder:{type:String,required:!1},isRequired:{type:Boolean,required:!1},disabled:{type:Boolean,required:!1},note:{type:String,required:!1}},computed:{slug(){return(0,d.Y)("text",this.label,this.modelValue)}}}),m=n(6262);const g=(0,m.A)(p,[["render",i],["__scopeId","data-v-de2a2f90"]]);var h=g},349:function(e,t,n){n.r(t),n.d(t,{default:function(){return q}});var l=n(641),o=n(3751);const r={class:"badges container-lg"},a={class:"row"},u={class:"col-6"},s={class:"app-input"},i={name:"text"},d={name:"links"},c={class:"col-6"},p={class:"row"},m={class:"col-12"};function g(e,t,n,g,h,b){const k=(0,l.g2)("TextInput"),f=(0,l.g2)("Results"),v=(0,l.g2)("Help");return(0,l.uX)(),(0,l.CE)("div",r,[t[15]||(t[15]=(0,l.Lk)("div",{class:"row"},[(0,l.Lk)("div",{class:"col-12"},[(0,l.Lk)("h1",null,"Data badges")])],-1)),(0,l.Lk)("div",a,[(0,l.Lk)("div",u,[(0,l.Lk)("div",s,[t[14]||(t[14]=(0,l.Lk)("h2",null,"Input values",-1)),(0,l.Lk)("form",{onSubmit:t[5]||(t[5]=(0,o.D$)(((...t)=>e.submit&&e.submit(...t)),["prevent"]))},[(0,l.Lk)("fieldset",i,[t[6]||(t[6]=(0,l.Lk)("legend",null,"Text",-1)),(0,l.bF)(k,{label:"Label",modelValue:e.label,"onUpdate:modelValue":t[0]||(t[0]=t=>e.label=t),isRequired:"",placeholder:"e.g. keywords",note:"Display text for the left of the badge"},null,8,["modelValue"]),t[7]||(t[7]=(0,l.Lk)("br",null,null,-1)),(0,l.bF)(k,{label:"Alt text",modelValue:e.altText,"onUpdate:modelValue":t[1]||(t[1]=t=>e.altText=t),placeholder:"e.g. keywords",note:"Markdown fallback alt text - useful for a broken link. If omitted, the _Label_ will be used."},null,8,["modelValue"]),t[8]||(t[8]=(0,l.Lk)("br",null,null,-1)),(0,l.bF)(k,{label:"URL",modelValue:e.url,"onUpdate:modelValue":t[2]||(t[2]=t=>e.url=t),isRequired:"",placeholder:"e.g. https://example.com/foo.json",note:"URL for a public JSON file."},null,8,["modelValue"]),t[9]||(t[9]=(0,l.Lk)("br",null,null,-1)),(0,l.bF)(k,{label:"Query",modelValue:e.query,"onUpdate:modelValue":t[3]||(t[3]=t=>e.query=t),isRequired:"",placeholder:"e.g. $.keywords ",note:"JSON query to get a value."},null,8,["modelValue"])]),t[11]||(t[11]=(0,l.Lk)("br",null,null,-1)),(0,l.Lk)("fieldset",d,[t[10]||(t[10]=(0,l.Lk)("legend",null,"Links",-1)),(0,l.bF)(k,{label:"Click target",modelValue:e.target,"onUpdate:modelValue":t[4]||(t[4]=t=>e.target=t),placeholder:"e.g. https://example.com",note:"URL like for your GitHub repo, or a local path like `/docs/`."},null,8,["modelValue"])]),t[12]||(t[12]=(0,l.Lk)("br",null,null,-1)),t[13]||(t[13]=(0,l.Lk)("input",{class:"btn",type:"submit",value:"Submit"},null,-1))],32)])]),(0,l.Lk)("div",c,[(0,l.bF)(f,{result:e.result},null,8,["result"])])]),(0,l.Lk)("div",p,[(0,l.Lk)("div",m,[(0,l.bF)(v,{message:e.note},null,8,["message"])])])])}var h=n(6971),b=n(5340),k=n(5558),f=n(620),v=n(6821),y=n(8594);function w(e,t,n,l="",o=""){if(!e)throw new Error("`label` may not be empty");if(!t)throw new Error("`url` may not be empty");if(!n)throw new Error("`query` may not be empty");o||(o=e);const r=(0,y.Bc)({label:e,url:t,query:n});return(0,v.nT)({altText:o,imageTarget:r,linkTarget:l})}const L='\nReference a value in a remote data file. The badge will update as the content there changes. Only the _JSON_ format is supported in this generator.\n\nHelp on form fields:\n\n- Label: A text label to display. e.g.\n    - `keywords`\n    - `vscode` or `VS Code`\n- URL: A raw URL for a JSON file on GitHub, or URL for a JSON file on your REST API server. e.g.\n    - `https://raw.githubusercontent.com/MichaelCurrin/auto-commit-msg/master/package.json`\n    - `https://example.com/foo.json`\n- Query: Look-up value within the data structure, such as these attributes. For syntax rules, see this [JSON path](https://support.smartbear.com/alertsite/docs/monitors/api/endpoint/jsonpath.html) guide.  e.g.\n    - `$.keywords` in package.json\n    - `$.engines.node` in package.json or `$.abc["def-ghi"]` for handling hyphens etc.\n\nSample badges:\n\n- Badge Generator package.json - [![node](https://img.shields.io/badge/dynamic/json?label=node&query=%24.engines.node&url=https%3A%2F%2Fraw.githubusercontent.com%2FMichaelCurrin%2Fbadge-generator%2Fmaster%2Fpackage.json)](https://github.com/MichaelCurrin/badge-generator)\n- AutoCommitMsg package.json - [![keywords](https://img.shields.io/badge/dynamic/json?label=keywords&query=%24.keywords&url=https%3A%2F%2Fraw.githubusercontent.com%2FMichaelCurrin%2Fauto-commit-msg%2Fmaster%2Fpackage.json)](https://github.com/MichaelCurrin/auto-commit-msg)\n- AutoCommitMsg package.json - [![vscode](https://img.shields.io/badge/dynamic/json?label=vscode&query=%24.engines.vscode&url=https%3A%2F%2Fraw.githubusercontent.com%2FMichaelCurrin%2Fauto-commit-msg%2Fmaster%2Fpackage.json)](https://github.com/MichaelCurrin/auto-commit-msg/)\n';var C=(0,l.pM)({name:"DataBadges",components:{Help:b.A,Results:k.A,TextInput:f.A},data(){return{altText:"",label:"",url:"",query:"",target:"",result:h.BI,note:L}},methods:{submit(){const e=w(this.label,this.url,this.query,this.target);this.result=`_Query parameter badge_\n\n${e}\n      `}}}),A=n(6262);const F=(0,A.A)(C,[["render",g]]);var q=F}}]);
//# sourceMappingURL=data.d43b9cc5.js.map
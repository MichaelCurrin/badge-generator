"use strict";(self["webpackChunkbadge_generator"]=self["webpackChunkbadge_generator"]||[]).push([[375],{620:function(e,o,n){n.d(o,{A:function(){return g}});var t=n(641),l=n(33);const a=["for"],s={key:0,class:"required"},r=["id","value","placeholder","required","disabled"],d={key:0,class:"note"};function u(e,o,n,u,i,c){const p=(0,t.g2)("Markdown");return(0,t.uX)(),(0,t.CE)("div",null,[(0,t.Lk)("label",{for:e.slug},[(0,t.eW)((0,l.v_)(e.label),1),e.isRequired?((0,t.uX)(),(0,t.CE)("span",s,"*")):(0,t.Q3)("",!0)],8,a),(0,t.Lk)("input",{id:e.slug,type:"text",value:e.modelValue,placeholder:e.placeholder,required:e.isRequired,disabled:e.disabled,onInput:o[0]||(o[0]=o=>e.$emit("update:modelValue",o.target.value))},null,40,r),e.note?((0,t.uX)(),(0,t.CE)("small",d,[(0,t.bF)(p,{content:e.note},null,8,["content"])])):(0,t.Q3)("",!0)])}var i=n(5755),c=n(118),p=(0,t.pM)({name:"TextInput",components:{Markdown:c.A},props:{label:{type:String,required:!0},modelValue:{type:String,required:!0},placeholder:{type:String,required:!1},isRequired:{type:Boolean,required:!1},disabled:{type:Boolean,required:!1},note:{type:String,required:!1}},computed:{slug(){return(0,i.Y)("text",this.label,this.modelValue)}}}),h=n(6262);const m=(0,h.A)(p,[["render",u],["__scopeId","data-v-de2a2f90"]]);var g=m},3654:function(e,o,n){n.d(o,{A:function(){return m}});var t=n(641),l=n(33);const a=["for"],s=["id","checked"],r={key:0,class:"note"};function d(e,o,n,d,u,i){const c=(0,t.g2)("Markdown");return(0,t.uX)(),(0,t.CE)("div",null,[(0,t.Lk)("label",{for:e.slug},(0,l.v_)(e.label),9,a),(0,t.Lk)("input",{id:e.slug,type:"checkbox",checked:e.modelValue,onChange:o[0]||(o[0]=o=>e.$emit("update:modelValue",o.target.checked))},null,40,s),e.note?((0,t.uX)(),(0,t.CE)("small",r,[(0,t.bF)(c,{content:e.note},null,8,["content"])])):(0,t.Q3)("",!0)])}var u=n(118),i=n(5755),c=(0,t.pM)({name:"CheckboxItem",components:{Markdown:u.A},props:{label:{type:String,required:!0},modelValue:{type:Boolean,required:!1},note:{type:String,required:!1}},computed:{slug(){return(0,i.Y)("box",this.label)}}}),p=n(6262);const h=(0,p.A)(c,[["render",d]]);var m=h},4322:function(e,o,n){n.r(o),n.d(o,{default:function(){return _}});var t=n(641),l=n(3751),a=n(33);const s={class:"badges container-lg"},r={class:"row"},d={class:"col-6"},u={class:"app-input"},i={name:"gh-repo"},c={name:"display-options"},p={name:"gh-actions"},h={name:"system-dependencies"},m=["disabled"],g=["disabled"],b={class:"col-6"},y={class:"row"},k={class:"col-12"};function f(e,o,n,f,v,L){const w=(0,t.g2)("TextInput"),V=(0,t.g2)("Checkbox"),T=(0,t.g2)("Results"),A=(0,t.g2)("Help");return(0,t.uX)(),(0,t.CE)("div",s,[o[37]||(o[37]=(0,t.Lk)("div",{class:"row"},[(0,t.Lk)("div",{class:"col-12"},[(0,t.Lk)("h1",null,"Repo badges"),(0,t.Lk)("p",null," Generate shields about your repo and add them to your README.md file. ")])],-1)),(0,t.Lk)("div",r,[(0,t.Lk)("div",d,[(0,t.Lk)("div",u,[o[36]||(o[36]=(0,t.Lk)("h2",null,"Input values",-1)),(0,t.Lk)("form",{onSubmit:o[17]||(o[17]=(0,l.D$)((...o)=>e.submit&&e.submit(...o),["prevent"]))},[(0,t.Lk)("fieldset",i,[o[21]||(o[21]=(0,t.Lk)("legend",null,"GitHub repo",-1)),(0,t.bF)(w,{label:"Username",modelValue:e.username,"onUpdate:modelValue":o[0]||(o[0]=o=>e.username=o),isRequired:""},null,8,["modelValue"]),o[22]||(o[22]=(0,t.Lk)("br",null,null,-1)),(0,t.bF)(w,{label:"Repo name",modelValue:e.repoName,"onUpdate:modelValue":o[1]||(o[1]=o=>e.repoName=o),isRequired:""},null,8,["modelValue"]),o[23]||(o[23]=(0,t.Lk)("br",null,null,-1)),(0,t.bF)(w,{label:"License",modelValue:e.licenseType,"onUpdate:modelValue":o[2]||(o[2]=o=>e.licenseType=o)},null,8,["modelValue"]),o[24]||(o[24]=(0,t.Lk)("br",null,null,-1)),(0,t.Lk)("div",null,[o[20]||(o[20]=(0,t.Lk)("label",null,"Version type",-1)),(0,t.Lk)("span",null,[(0,t.bo)((0,t.Lk)("input",{type:"radio",id:"one",value:"tag","onUpdate:modelValue":o[3]||(o[3]=o=>e.versionType=o)},null,512),[[l.XL,e.versionType]]),o[18]||(o[18]=(0,t.Lk)("label",{for:"one"},"Tag",-1))]),(0,t.Lk)("span",null,[(0,t.bo)((0,t.Lk)("input",{type:"radio",id:"two",value:"release","onUpdate:modelValue":o[4]||(o[4]=o=>e.versionType=o)},null,512),[[l.XL,e.versionType]]),o[19]||(o[19]=(0,t.Lk)("label",{for:"two"},"Release",-1))])])]),o[31]||(o[31]=(0,t.Lk)("br",null,null,-1)),(0,t.Lk)("fieldset",c,[o[25]||(o[25]=(0,t.Lk)("legend",null,"Display options",-1)),(0,t.bF)(w,{label:"Color",modelValue:e.badgeColor,"onUpdate:modelValue":o[5]||(o[5]=o=>e.badgeColor=o),placeholder:"e.g. blue",note:e.colorHelp},null,8,["modelValue","note"]),(0,t.bF)(V,{label:"Social badges",modelValue:e.addSocialBadges,"onUpdate:modelValue":o[6]||(o[6]=o=>e.addSocialBadges=o),note:"Show badges about the GitHub repo - not useful for your main README.md on GitHub but these are great for adding to a page on docs site or for linking to your repo from another location you control like a repo or website."},null,8,["modelValue"]),(0,t.bF)(V,{label:"Issues badge",modelValue:e.addIssues,"onUpdate:modelValue":o[7]||(o[7]=o=>e.addIssues=o),note:"Add a counter for number of open issues. The color will change based on the count."},null,8,["modelValue"]),(0,t.bF)(V,{label:"Template button",modelValue:e.useThisTemplate,"onUpdate:modelValue":o[8]||(o[8]=o=>e.useThisTemplate=o),note:"Add a <i>Use This Template</i> button."},null,8,["modelValue"]),(0,t.bF)(V,{label:"GH Pages button",modelValue:e.ghPages,"onUpdate:modelValue":o[9]||(o[9]=o=>e.ghPages=o),note:"Add a link to a GitHub Pages site."},null,8,["modelValue"]),(0,t.bF)(V,{label:"Documentation section",modelValue:e.addDocsSection,"onUpdate:modelValue":o[10]||(o[10]=o=>e.addDocsSection=o),note:"Add heading and content around documentation."},null,8,["modelValue"]),(0,t.bF)(V,{label:"License section",modelValue:e.addLicenseSection,"onUpdate:modelValue":o[11]||(o[11]=o=>e.addLicenseSection=o),note:"Add heading and content around license. If enabled, the license badge at the top of the page will point to this section on the page, otherwise it will point to the full URL of the license file."},null,8,["modelValue"])]),o[32]||(o[32]=(0,t.Lk)("br",null,null,-1)),(0,t.Lk)("fieldset",p,[o[26]||(o[26]=(0,t.Lk)("legend",null,"GitHub Actions workflow",-1)),(0,t.bF)(w,{label:"Name",modelValue:e.workflowName,"onUpdate:modelValue":o[12]||(o[12]=o=>e.workflowName=o),placeholder:"e.g. Node CI",note:'From the "name" field of a GH Actions workflow file. For the default repo settings, you can use "GH Pages Deploy".'},null,8,["modelValue"])]),o[33]||(o[33]=(0,t.Lk)("br",null,null,-1)),(0,t.Lk)("fieldset",h,[o[30]||(o[30]=(0,t.Lk)("legend",null,"System dependencies",-1)),(0,t.bF)(V,{label:"Python version",modelValue:e.addPythonVersion,"onUpdate:modelValue":o[13]||(o[13]=o=>e.addPythonVersion=o),note:"Display Python badge with version read from a pyproject.toml file."},null,8,["modelValue"]),(0,t.Lk)("div",{class:(0,a.C4)(e.addPythonVersion?"":e.disabledClass)},[o[29]||(o[29]=(0,t.Lk)("span",null,"Query type: ",-1)),(0,t.Lk)("div",null,[(0,t.bo)((0,t.Lk)("input",{type:"radio",id:"project",name:"python-query-type",value:"PROJECT",disabled:!e.addPythonVersion,"onUpdate:modelValue":o[14]||(o[14]=o=>e.pythonQueryType=o),checked:""},null,8,m),[[l.XL,e.pythonQueryType]]),o[27]||(o[27]=(0,t.Lk)("label",{for:"project"},"project.requires-python",-1))]),(0,t.Lk)("div",null,[(0,t.bo)((0,t.Lk)("input",{type:"radio",id:"tool-poetry",name:"python-query-type",value:"TOOL_POETRY",disabled:!e.addPythonVersion,"onUpdate:modelValue":o[15]||(o[15]=o=>e.pythonQueryType=o)},null,8,g),[[l.XL,e.pythonQueryType]]),o[28]||(o[28]=(0,t.Lk)("label",{for:"tool-poetry"},"tool.poetry.dependencies.python",-1))])],2),(0,t.bF)(w,{label:"Branch",modelValue:e.pythonBranch,"onUpdate:modelValue":o[16]||(o[16]=o=>e.pythonBranch=o),placeholder:"e.g. main",note:"Git branch to read pyproject.toml from.",disabled:!e.addPythonVersion},null,8,["modelValue","disabled"])]),o[34]||(o[34]=(0,t.Lk)("br",null,null,-1)),o[35]||(o[35]=(0,t.Lk)("input",{class:"btn",type:"submit",value:"Submit"},null,-1))],32)])]),(0,t.Lk)("div",b,[(0,t.bF)(T,{result:e.result},null,8,["result"])])]),(0,t.Lk)("div",y,[(0,t.Lk)("div",k,[(0,t.bF)(A,{message:e.note},null,8,["message"])])])])}var v=n(2782),L=n(4730),w=n(9667),V=n(6971),T=n(5340),A=n(3654),C=n(5558),S=n(620),R=n(348),P=n(6821);function U({ghURL:e,workflowName:o}){const n=encodeURIComponent(o);return`${e}/workflows/${n}/badge.svg`}function B({ghURL:e,workflowName:o}){const n=o.replace(/ /g,"+");return`${e}/actions?query=workflow:"${n}"`}function I({ghURL:e,workflowName:o}){return{altText:o,imageTarget:U({ghURL:e,workflowName:o}),linkTarget:B({ghURL:e,workflowName:o})}}function M(e,o){const n=e.ghURL(),t=I({ghURL:n,workflowName:o});return(0,P.nT)(t)}var N=n(3605);const q="\n- Where to put the repo metadata badges.\n    - In your `README.md` file.\n- Where to put the social badges.\n    - On a docs site to link back to your repo.\n    - Link to a repo you don't own - such as if you want to link to the Vue repo and show its star count.\n- The first social badge has fixed display logic - so make sure you enter a valid repo as the badge can't tell you it is broken. A positive of this is that it works to point to private repos.\n- If you want to always how the latest tag, even if it has _no release_ yet, use the Tag badge. Otherwise, use the Release badge.\n- For centered badges - note that the HTML `align` attribute is being deprecated in favor of CSS. But in markdown on GitHub you cannot set CSS even inline and so must use the `align` attribute.\n\nIf you need more content for the body of your README.md or doc files, check out this generic template:\n\n- [![MichaelCurrin - generic-project-template](https://img.shields.io/static/v1?label=MichaelCurrin&message=generic-project-template&color=blue&logo=github)](https://github.com/MichaelCurrin/generic-project-template)\n";var F=(0,t.pM)({name:"RepoBadges",components:{Checkbox:A.A,Help:T.A,Results:C.A,TextInput:S.A},data(){const e="tag";return{username:N.A.getRepoUsername(),repoName:N.A.getRepoName(),licenseType:w.du.licenseType,addSocialBadges:!1,addIssues:!1,useThisTemplate:!1,ghPages:!1,addDocsSection:!0,addLicenseSection:!0,addPythonVersion:N.A.getAddPythonVersion(),pythonBranch:N.A.getPythonBranch(),pythonQueryType:N.A.getPythonQueryType(),badgeColor:L.Xo.Default,workflowName:"",versionType:e,result:V.BI,note:q,colorHelp:V.AM}},methods:{submit(){v.O&&(console.debug("Process inputs and render results"),console.debug({username:this.username,repoName:this.repoName,licenseType:this.licenseType,useThisTemplate:this.useThisTemplate,versionType:this.versionType,ghPages:this.ghPages,workflowName:this.workflowName,badgeColor:this.badgeColor})),N.A.setRepoUsername(this.username),N.A.setRepoName(this.repoName),N.A.setAddPythonVersion(this.addPythonVersion),N.A.setPythonBranch(this.pythonBranch),N.A.setPythonQueryType(this.pythonQueryType);const e=new R.lc(this.username,this.repoName,this.licenseType,this.badgeColor);let o="";if(this.addSocialBadges){const n=e.ghBadge(),t=e.ghCounterBadge("stars"),l=e.ghCounterBadge("forks");o=`_Social buttons_\n\n${n}\n${t}\n${l}\n`}const n=this.workflowName?M(e,this.workflowName):"",t=e.tagBadge(this.versionType),l=this.addPythonVersion?e.pythonVersionBadge(this.pythonBranch,this.pythonQueryType):"",a=this.addLicenseSection,s=e.licenseBadge(a),r=this.addIssues?e.ghCounterBadge("issues"):"",d=this.useThisTemplate?e.useThisTemplateBadge():"",u=this.ghPages?e.ghPagesBadge():"",i=this.addDocsSection?e.documentationMessage():"",c=this.addLicenseSection?e.licenseMessage():"";this.result=`${o}\n\n_Repo metadata_\n\n${n}\n${t}\n${s}\n${r}\n\n_System dependencies_\n\n${l}\n\n_Call-to-Action buttons_\n\n<div align="center">\n\n${d}\n\n${u}\n\n</div>\n\n${i}\n\n${c}`}}}),H=n(6262);const $=(0,H.A)(F,[["render",f]]);var _=$},5340:function(e,o,n){n.d(o,{A:function(){return i}});var t=n(641);const l={class:"app-notes"};function a(e,o,n,a,s,r){const d=(0,t.g2)("Markdown");return(0,t.uX)(),(0,t.CE)("div",l,[o[0]||(o[0]=(0,t.Lk)("h2",null,"Notes",-1)),(0,t.Lk)("p",null,[(0,t.bF)(d,{content:e.message},null,8,["content"])])])}var s=n(118),r=(0,t.pM)({name:"HelpItem",components:{Markdown:s.A},props:{message:{type:String,required:!0}}}),d=n(6262);const u=(0,d.A)(r,[["render",a]]);var i=u},5558:function(e,o,n){n.d(o,{A:function(){return c}});var t=n(641);const l={class:"app-results"};function a(e,o,n,a,s,r){const d=(0,t.g2)("Markdown"),u=(0,t.g2)("CodeItem");return(0,t.uX)(),(0,t.CE)("div",l,[o[2]||(o[2]=(0,t.Lk)("h2",null,"Output values",-1)),(0,t.Lk)("div",null,[o[0]||(o[0]=(0,t.Lk)("h3",null,"Preview",-1)),(0,t.bF)(d,{class:"markdown-preview",content:e.result},null,8,["content"])]),o[3]||(o[3]=(0,t.Lk)("br",null,null,-1)),(0,t.Lk)("div",null,[o[1]||(o[1]=(0,t.Lk)("h3",null,"Code",-1)),(0,t.bF)(u,{code:e.result},null,8,["code"])])])}var s=n(8495),r=n(118),d=(0,t.pM)({name:"ResultsItem",components:{Markdown:r.A,CodeItem:s.A},props:{result:{type:String,required:!0}}}),u=n(6262);const i=(0,u.A)(d,[["render",a],["__scopeId","data-v-5b828de6"]]);var c=i},5755:function(e,o,n){function t(e){return e.replace(/^\/+/,"")}function l(...e){const o=e.join("-");return o.replace(/^\s+|\s+$/g,"").toLowerCase().replace(/[^a-z0-9 -]/g,"").replace(/\s+/g,"-").replace(/-+/g,"-")}n.d(o,{Y:function(){return l},g:function(){return t}})},6971:function(e,o,n){n.d(o,{AM:function(){return l},BI:function(){return t},Y9:function(){return s},mC:function(){return a}});const t="_Your output will appear here_",l="Custom color for some badges on this page which use this value. Must be a keyword or hex code. <br>Hints: `brightgreen`, `green`, `yellowgreen`, `yellow`, `orange`, `red`, `blue`, `lightgrey`, `success`, `important`, `critical`, `informational`, `inactive`, `blueviolet`, `ff69b4`, `9cf`, `2ea44f` (GitHub's green). <br>The Shields.io API will use `blue` as a default if no color is provided.",a="Supports values like `dependabot`, `discord` and `npm`. And hundreds of logos from [SimpleIcons](https://simpleicons.org/) such as `python`, `node.js` and `visual-studio-code`",s="Color keyword or hex code. The badge's own color will be used unless you specify an override. Using `white` is great for readability against the dark label background."},8495:function(e,o,n){n.d(o,{A:function(){return h}});var t=n(641),l=n(33);function a(e,o,n,a,s,r){const d=(0,t.g2)("Checkbox");return(0,t.uX)(),(0,t.CE)("div",null,[(0,t.bF)(d,{label:"Show HTML",modelValue:e.asHtml,"onUpdate:modelValue":o[0]||(o[0]=o=>e.asHtml=o)},null,8,["modelValue"]),o[1]||(o[1]=(0,t.Lk)("br",null,null,-1)),(0,t.Lk)("pre",null,[(0,t.Lk)("code",{ref:"codeBlock",class:"markdown"},(0,l.v_)(e.outputCode),513)])])}var s=n(948),r=n.n(s),d=n(6821),u=n(3654),i=(0,t.pM)({name:"CodeItem",components:{Checkbox:u.A},props:{code:{type:String,required:!0}},data(){return{asHtml:!1}},computed:{outputCode(){if(this.asHtml){const e=(0,d.sj)(this.code);return(0,d.bS)(e)}return this.code}},methods:{highlight(){const e=this.$refs.codeBlock;r().highlightElement(e)}},mounted(){this.highlight()},updated(){this.highlight()}}),c=n(6262);const p=(0,c.A)(i,[["render",a]]);var h=p}}]);
//# sourceMappingURL=repo.21bea6da.js.map
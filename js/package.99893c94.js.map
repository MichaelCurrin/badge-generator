{"version":3,"file":"js/package.99893c94.js","mappings":"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","sources":["webpack://badge-generator/./src/constants/text.ts","webpack://badge-generator/./src/lib.ts","webpack://badge-generator/./src/components/Checkbox.vue?519b","webpack://badge-generator/./src/components/Checkbox.vue","webpack://badge-generator/./src/components/Checkbox.vue?2e6e","webpack://badge-generator/./src/components/Code.vue?b005","webpack://badge-generator/./src/components/Code.vue","webpack://badge-generator/./src/components/Code.vue?52d4","webpack://badge-generator/./src/components/Help.vue?2b55","webpack://badge-generator/./src/components/Help.vue","webpack://badge-generator/./src/components/Help.vue?a5ec","webpack://badge-generator/./src/components/Results.vue?ddfc","webpack://badge-generator/./src/components/Results.vue","webpack://badge-generator/./src/components/Results.vue?b96a","webpack://badge-generator/./src/components/TextInput.vue?dd83","webpack://badge-generator/./src/components/TextInput.vue","webpack://badge-generator/./src/components/TextInput.vue?504a","webpack://badge-generator/./src/views/PackageBadges.vue?837e","webpack://badge-generator/./src/views/PackageBadges.vue","webpack://badge-generator/./src/core/packages.ts","webpack://badge-generator/./src/views/PackageBadges.vue?5aa1"],"sourcesContent":["export const INITIAL_RESULT = \"_Your output will appear here_\";\n\nexport const COLOR_HELP =\n  \"Custom color for some badges on this page which use this value. Must be a keyword or hex code. <br>Hints: `brightgreen`, `green`, `yellowgreen`, `yellow`, `orange`, `red`, `blue`, `lightgrey`, `success`, `important`, `critical`, `informational`, `inactive`, `blueviolet`, `ff69b4`, `9cf`, `2ea44f` (GitHub's green). <br>The Shields.io API will use `blue` as a default if no color is provided.\";\n\nexport const LOGO_HELP =\n  \"Supports values like `dependabot`, `discord` and `npm`. And hundreds of logos from [SimpleIcons](https://simpleicons.org/) such as `python`, `node.js` and `visual-studio-code`\";\n\nexport const LOGO_COLOR_HELP =\n  \"Color keyword or hex code. The badge's own color will be used unless you specify an override. Using `white` is great for readability against the dark label background.\";\n","/**\n * Lib helper functions for Vue app.\n */\n\nexport function stripLeadingSlash(value: string) {\n  return value.replace(/^\\/+/, \"\");\n}\n\nexport function slugify(...values: string[]) {\n  const value = values.join(\"-\");\n\n  return value\n    .replace(/^\\s+|\\s+$/g, \"\") // Trim\n    .toLowerCase()\n    .replace(/[^a-z0-9 -]/g, \"\")\n    .replace(/\\s+/g, \"-\") // Collapse whitespace\n    .replace(/-+/g, \"-\"); // Collapse dashes\n}\n","import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\"\n\nconst _hoisted_1 = [\"for\"]\nconst _hoisted_2 = [\"id\", \"checked\"]\nconst _hoisted_3 = {\n  key: 0,\n  class: \"note\"\n}\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_Markdown = _resolveComponent(\"Markdown\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", null, [\n    _createElementVNode(\"label\", { for: _ctx.slug }, _toDisplayString(_ctx.label), 9, _hoisted_1),\n    _createElementVNode(\"input\", {\n      id: _ctx.slug,\n      type: \"checkbox\",\n      checked: _ctx.modelValue,\n      onChange: _cache[0] || (_cache[0] = ($event: any) => (\n        _ctx.$emit('update:modelValue', ($event.target as HTMLInputElement).checked)\n      ))\n    }, null, 40, _hoisted_2),\n    (_ctx.note)\n      ? (_openBlock(), _createElementBlock(\"small\", _hoisted_3, [\n          _createVNode(_component_Markdown, { content: _ctx.note }, null, 8, [\"content\"])\n        ]))\n      : _createCommentVNode(\"\", true)\n  ]))\n}","<template>\n  <div>\n    <label :for=\"slug\">\n      {{ label }}\n    </label>\n\n    <input\n      :id=\"slug\"\n      type=\"checkbox\"\n      :checked=\"modelValue\"\n      v-on:change=\"\n        $emit('update:modelValue', ($event.target as HTMLInputElement).checked)\n      \"\n    />\n\n    <small class=\"note\" v-if=\"note\">\n      <Markdown :content=\"note\"></Markdown>\n    </small>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from \"vue\";\n\nimport Markdown from \"@/components/Markdown.vue\";\nimport { slugify } from \"@/lib\";\n\nexport default defineComponent({\n  name: \"CheckboxItem\",\n  components: {\n    Markdown,\n  },\n  props: {\n    label: { type: String, required: true },\n    modelValue: { type: Boolean, required: false },\n    note: { type: String, required: false },\n  },\n  computed: {\n    slug(): string {\n      return slugify(\"box\", this.label);\n    },\n  },\n});\n</script>\n","import { render } from \"./Checkbox.vue?vue&type=template&id=eac29fba&ts=true\"\nimport script from \"./Checkbox.vue?vue&type=script&lang=ts\"\nexport * from \"./Checkbox.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1)\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_Checkbox = _resolveComponent(\"Checkbox\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", null, [\n    _createVNode(_component_Checkbox, {\n      label: \"Show HTML\",\n      modelValue: _ctx.asHtml,\n      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((_ctx.asHtml) = $event))\n    }, null, 8, [\"modelValue\"]),\n    _hoisted_1,\n    _createElementVNode(\"pre\", null, [\n      _createElementVNode(\"code\", {\n        ref: \"codeBlock\",\n        class: \"markdown\"\n      }, _toDisplayString(_ctx.outputCode), 513)\n    ])\n  ]))\n}","// Render Markdown as a codeblock. Apply highlighting on content changes.\n<template>\n  <div>\n    <Checkbox label=\"Show HTML\" v-model=\"asHtml\" />\n    <br />\n\n    <pre><code ref=\"codeBlock\" class=\"markdown\">{{ outputCode }}</code></pre>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport hljs from \"highlight.js\";\nimport { defineComponent } from \"vue\";\n\nimport { cleanHtml, mdToHTML } from \"@/core/markdown\";\nimport Checkbox from \"./Checkbox.vue\";\n\nexport default defineComponent({\n  name: \"CodeItem\",\n  components: {\n    Checkbox,\n  },\n  props: {\n    code: { type: String, required: true },\n  },\n  data() {\n    return {\n      asHtml: false,\n    };\n  },\n  computed: {\n    outputCode(): String {\n      if (this.asHtml) {\n        const htmlCode = mdToHTML(this.code);\n\n        return cleanHtml(htmlCode);\n      }\n      return this.code;\n    },\n  },\n  methods: {\n    highlight() {\n      const block = this.$refs.codeBlock as HTMLElement;\n      hljs.highlightElement(block);\n    },\n  },\n  mounted() {\n    this.highlight();\n  },\n  updated() {\n    this.highlight();\n  },\n});\n</script>\n","import { render } from \"./Code.vue?vue&type=template&id=f62513dc&ts=true\"\nimport script from \"./Code.vue?vue&type=script&lang=ts\"\nexport * from \"./Code.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"app-notes\" }\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Notes\", -1)\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_Markdown = _resolveComponent(\"Markdown\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _hoisted_2,\n    _createElementVNode(\"p\", null, [\n      _createVNode(_component_Markdown, { content: _ctx.message }, null, 8, [\"content\"])\n    ])\n  ]))\n}","<template>\n  <div class=\"app-notes\">\n    <h2>Notes</h2>\n    <p>\n      <Markdown :content=\"message\"></Markdown>\n    </p>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from \"vue\";\nimport Markdown from \"@/components/Markdown.vue\";\n\nexport default defineComponent({\n  name: \"HelpItem\",\n  components: {\n    Markdown,\n  },\n  props: {\n    message: { type: String, required: true },\n  },\n});\n</script>\n","import { render } from \"./Help.vue?vue&type=template&id=264f967b&ts=true\"\nimport script from \"./Help.vue?vue&type=script&lang=ts\"\nexport * from \"./Help.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-5b828de6\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"app-results\" }\nconst _hoisted_2 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"Output values\", -1))\nconst _hoisted_3 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"h3\", null, \"Preview\", -1))\nconst _hoisted_4 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1))\nconst _hoisted_5 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"h3\", null, \"Code\", -1))\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_Markdown = _resolveComponent(\"Markdown\")!\n  const _component_CodeItem = _resolveComponent(\"CodeItem\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _hoisted_2,\n    _createElementVNode(\"div\", null, [\n      _hoisted_3,\n      _createVNode(_component_Markdown, {\n        class: \"markdown-preview\",\n        content: _ctx.result\n      }, null, 8, [\"content\"])\n    ]),\n    _hoisted_4,\n    _createElementVNode(\"div\", null, [\n      _hoisted_5,\n      _createVNode(_component_CodeItem, { code: _ctx.result }, null, 8, [\"code\"])\n    ])\n  ]))\n}","<template>\n  <!-- Badge Generator output pane -->\n  <div class=\"app-results\">\n    <h2>Output values</h2>\n\n    <div>\n      <h3>Preview</h3>\n\n      <Markdown class=\"markdown-preview\" :content=\"result\"></Markdown>\n    </div>\n\n    <br />\n\n    <div>\n      <h3>Code</h3>\n\n      <CodeItem :code=\"result\" />\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from \"vue\";\n\nimport CodeItem from \"@/components/Code.vue\";\nimport Markdown from \"@/components/Markdown.vue\";\n\nexport default defineComponent({\n  name: \"ResultsItem\",\n  components: {\n    Markdown,\n    CodeItem,\n  },\n  props: {\n    result: { type: String, required: true },\n  },\n});\n</script>\n\n<style scoped>\n.markdown-preview {\n  padding-left: 12px;\n}\n</style>\n","import { render } from \"./Results.vue?vue&type=template&id=5b828de6&scoped=true&ts=true\"\nimport script from \"./Results.vue?vue&type=script&lang=ts\"\nexport * from \"./Results.vue?vue&type=script&lang=ts\"\n\nimport \"./Results.vue?vue&type=style&index=0&id=5b828de6&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-5b828de6\"]])\n\nexport default __exports__","import { toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-de2a2f90\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = [\"for\"]\nconst _hoisted_2 = {\n  key: 0,\n  class: \"required\"\n}\nconst _hoisted_3 = [\"id\", \"value\", \"placeholder\", \"required\", \"disabled\"]\nconst _hoisted_4 = {\n  key: 0,\n  class: \"note\"\n}\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_Markdown = _resolveComponent(\"Markdown\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", null, [\n    _createElementVNode(\"label\", { for: _ctx.slug }, [\n      _createTextVNode(_toDisplayString(_ctx.label), 1),\n      (_ctx.isRequired)\n        ? (_openBlock(), _createElementBlock(\"span\", _hoisted_2, \"*\"))\n        : _createCommentVNode(\"\", true)\n    ], 8, _hoisted_1),\n    _createElementVNode(\"input\", {\n      id: _ctx.slug,\n      type: \"text\",\n      value: _ctx.modelValue,\n      placeholder: _ctx.placeholder,\n      required: _ctx.isRequired,\n      disabled: _ctx.disabled,\n      onInput: _cache[0] || (_cache[0] = ($event: any) => (_ctx.$emit('update:modelValue', $event.target.value)))\n    }, null, 40, _hoisted_3),\n    (_ctx.note)\n      ? (_openBlock(), _createElementBlock(\"small\", _hoisted_4, [\n          _createVNode(_component_Markdown, { content: _ctx.note }, null, 8, [\"content\"])\n        ]))\n      : _createCommentVNode(\"\", true)\n  ]))\n}","<template>\n  <div>\n    <label :for=\"slug\">\n      {{ label }}<span v-if=\"isRequired\" class=\"required\">*</span>\n    </label>\n\n    <input\n      :id=\"slug\"\n      type=\"text\"\n      :value=\"modelValue\"\n      :placeholder=\"placeholder\"\n      :required=\"isRequired\"\n      :disabled=\"disabled\"\n      v-on:input=\"$emit('update:modelValue', $event.target.value)\"\n    />\n\n    <small class=\"note\" v-if=\"note\">\n      <Markdown :content=\"note\"></Markdown>\n    </small>\n  </div>\n</template>\n\n<style scoped>\nlabel {\n  padding-right: 0.5em;\n}\n</style>\n\n<script lang=\"ts\">\nimport { defineComponent } from \"vue\";\n\nimport { slugify } from \"@/lib\";\nimport Markdown from \"@/components/Markdown.vue\";\n\nexport default defineComponent({\n  name: \"TextInput\",\n  components: {\n    Markdown,\n  },\n  props: {\n    label: { type: String, required: true },\n    modelValue: { type: String, required: true },\n    placeholder: { type: String, required: false },\n    isRequired: { type: Boolean, required: false },\n    disabled: { type: Boolean, required: false },\n    note: { type: String, required: false },\n  },\n  computed: {\n    slug(): string {\n      return slugify(\"text\", this.label, this.modelValue);\n    },\n  },\n});\n</script>\n","import { render } from \"./TextInput.vue?vue&type=template&id=de2a2f90&scoped=true&ts=true\"\nimport script from \"./TextInput.vue?vue&type=script&lang=ts\"\nexport * from \"./TextInput.vue?vue&type=script&lang=ts\"\n\nimport \"./TextInput.vue?vue&type=style&index=0&id=de2a2f90&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-de2a2f90\"]])\n\nexport default __exports__","import { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, vModelRadio as _vModelRadio, withDirectives as _withDirectives, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"badges container-lg\" }\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"div\", { class: \"row\" }, [\n  /*#__PURE__*/_createElementVNode(\"div\", { class: \"col-12\" }, [\n    /*#__PURE__*/_createElementVNode(\"h1\", null, \"Package badges\"),\n    /*#__PURE__*/_createElementVNode(\"p\", null, \" Show your project's dependencies as badges in your docs, including an external link to the package in the registry. \"),\n    /*#__PURE__*/_createElementVNode(\"p\", null, [\n      /*#__PURE__*/_createTextVNode(\" Note that these badges here are \"),\n      /*#__PURE__*/_createElementVNode(\"b\", null, \"static\"),\n      /*#__PURE__*/_createTextVNode(\" and do not display a version number. Except for the Node badge, which shows the version number in your \"),\n      /*#__PURE__*/_createElementVNode(\"code\", null, \"package.json\"),\n      /*#__PURE__*/_createTextVNode(\" on GitHub. \")\n    ])\n  ])\n], -1)\nconst _hoisted_3 = { class: \"row\" }\nconst _hoisted_4 = { class: \"col-6\" }\nconst _hoisted_5 = { class: \"app-input\" }\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Input values\", -1)\nconst _hoisted_7 = { name: \"package\" }\nconst _hoisted_8 = /*#__PURE__*/_createElementVNode(\"legend\", null, \"Package metadata\", -1)\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1)\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"span\", null, \"Type: \", -1)\nconst _hoisted_11 = /*#__PURE__*/_createElementVNode(\"label\", { for: \"python\" }, \"Python (PyPI)\", -1)\nconst _hoisted_12 = /*#__PURE__*/_createElementVNode(\"label\", { for: \"node\" }, \"Node (NPM)\", -1)\nconst _hoisted_13 = /*#__PURE__*/_createElementVNode(\"label\", { for: \"ruby\" }, \"Ruby (RubyGems)\", -1)\nconst _hoisted_14 = /*#__PURE__*/_createElementVNode(\"label\", { for: \"go\" }, \"Go\", -1)\nconst _hoisted_15 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1)\nconst _hoisted_16 = /*#__PURE__*/_createElementVNode(\"span\", null, \"Environment: \", -1)\nconst _hoisted_17 = [\"value\", \"disabled\"]\nconst _hoisted_18 = { for: \"env-prod\" }\nconst _hoisted_19 = [\"value\", \"disabled\"]\nconst _hoisted_20 = { for: \"env-dev\" }\nconst _hoisted_21 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1)\nconst _hoisted_22 = { name: \"ghRepo\" }\nconst _hoisted_23 = /*#__PURE__*/_createElementVNode(\"legend\", null, \"GitHub repo\", -1)\nconst _hoisted_24 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1)\nconst _hoisted_25 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1)\nconst _hoisted_26 = { name: \"display-options\" }\nconst _hoisted_27 = /*#__PURE__*/_createElementVNode(\"legend\", null, \"Display options\", -1)\nconst _hoisted_28 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1)\nconst _hoisted_29 = /*#__PURE__*/_createElementVNode(\"input\", {\n  class: \"btn\",\n  type: \"submit\",\n  value: \"Submit\"\n}, null, -1)\nconst _hoisted_30 = { class: \"col-6\" }\nconst _hoisted_31 = { class: \"row\" }\nconst _hoisted_32 = { class: \"col-12\" }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_TextInput = _resolveComponent(\"TextInput\")!\n  const _component_Results = _resolveComponent(\"Results\")!\n  const _component_Help = _resolveComponent(\"Help\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _hoisted_2,\n    _createElementVNode(\"div\", _hoisted_3, [\n      _createElementVNode(\"div\", _hoisted_4, [\n        _createElementVNode(\"div\", _hoisted_5, [\n          _hoisted_6,\n          _createElementVNode(\"form\", {\n            onSubmit: _cache[12] || (_cache[12] = _withModifiers(\n//@ts-ignore\n(...args) => (_ctx.submit && _ctx.submit(...args)), [\"prevent\"]))\n          }, [\n            _createElementVNode(\"fieldset\", _hoisted_7, [\n              _hoisted_8,\n              _createVNode(_component_TextInput, {\n                label: \"Name\",\n                modelValue: _ctx.pkgName,\n                \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((_ctx.pkgName) = $event)),\n                placeholder: \"e.g. vue\",\n                isRequired: \"\"\n              }, null, 8, [\"modelValue\"]),\n              _hoisted_9,\n              _createElementVNode(\"div\", null, [\n                _hoisted_10,\n                _createElementVNode(\"div\", null, [\n                  _withDirectives(_createElementVNode(\"input\", {\n                    type: \"radio\",\n                    id: \"python\",\n                    name: \"package-type\",\n                    value: \"Python\",\n                    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((_ctx.pkgType) = $event)),\n                    checked: \"\"\n                  }, null, 512), [\n                    [_vModelRadio, _ctx.pkgType]\n                  ]),\n                  _hoisted_11\n                ]),\n                _createElementVNode(\"div\", null, [\n                  _withDirectives(_createElementVNode(\"input\", {\n                    type: \"radio\",\n                    id: \"node\",\n                    name: \"package-type\",\n                    value: \"Node\",\n                    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => ((_ctx.pkgType) = $event))\n                  }, null, 512), [\n                    [_vModelRadio, _ctx.pkgType]\n                  ]),\n                  _hoisted_12\n                ]),\n                _createElementVNode(\"div\", null, [\n                  _withDirectives(_createElementVNode(\"input\", {\n                    type: \"radio\",\n                    id: \"ruby\",\n                    name: \"package-type\",\n                    value: \"Ruby\",\n                    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = ($event: any) => ((_ctx.pkgType) = $event))\n                  }, null, 512), [\n                    [_vModelRadio, _ctx.pkgType]\n                  ]),\n                  _hoisted_13\n                ]),\n                _createElementVNode(\"div\", null, [\n                  _withDirectives(_createElementVNode(\"input\", {\n                    type: \"radio\",\n                    id: \"go\",\n                    name: \"package-type\",\n                    value: \"Go\",\n                    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = ($event: any) => ((_ctx.pkgType) = $event))\n                  }, null, 512), [\n                    [_vModelRadio, _ctx.pkgType]\n                  ]),\n                  _hoisted_14\n                ])\n              ]),\n              _hoisted_15,\n              _createElementVNode(\"div\", {\n                class: _normalizeClass(!_ctx.dynamicBadgeEnabled ? _ctx.disabledClass : '')\n              }, [\n                _hoisted_16,\n                _createElementVNode(\"span\", null, [\n                  _withDirectives(_createElementVNode(\"input\", {\n                    type: \"radio\",\n                    id: \"env-prod\",\n                    name: \"env-type\",\n                    value: _ctx.prodOption,\n                    disabled: !_ctx.dynamicBadgeEnabled,\n                    \"onUpdate:modelValue\": _cache[5] || (_cache[5] = ($event: any) => ((_ctx.envType) = $event)),\n                    checked: \"\"\n                  }, null, 8, _hoisted_17), [\n                    [_vModelRadio, _ctx.envType]\n                  ]),\n                  _createElementVNode(\"label\", _hoisted_18, _toDisplayString(_ctx.prodOption), 1)\n                ]),\n                _createElementVNode(\"span\", null, [\n                  _withDirectives(_createElementVNode(\"input\", {\n                    type: \"radio\",\n                    id: \"env-dev\",\n                    name: \"env-type\",\n                    value: _ctx.devOption,\n                    disabled: !_ctx.dynamicBadgeEnabled,\n                    \"onUpdate:modelValue\": _cache[6] || (_cache[6] = ($event: any) => ((_ctx.envType) = $event))\n                  }, null, 8, _hoisted_19), [\n                    [_vModelRadio, _ctx.envType]\n                  ]),\n                  _createElementVNode(\"label\", _hoisted_20, _toDisplayString(_ctx.devOption), 1)\n                ])\n              ], 2)\n            ]),\n            _hoisted_21,\n            _createElementVNode(\"fieldset\", _hoisted_22, [\n              _hoisted_23,\n              _createVNode(_component_TextInput, {\n                label: \"Username\",\n                modelValue: _ctx.username,\n                \"onUpdate:modelValue\": _cache[7] || (_cache[7] = ($event: any) => ((_ctx.username) = $event)),\n                disabled: !_ctx.dynamicBadgeEnabled\n              }, null, 8, [\"modelValue\", \"disabled\"]),\n              _hoisted_24,\n              _createVNode(_component_TextInput, {\n                label: \"Repo name\",\n                modelValue: _ctx.repoName,\n                \"onUpdate:modelValue\": _cache[8] || (_cache[8] = ($event: any) => ((_ctx.repoName) = $event)),\n                disabled: !_ctx.dynamicBadgeEnabled\n              }, null, 8, [\"modelValue\", \"disabled\"])\n            ]),\n            _hoisted_25,\n            _createElementVNode(\"fieldset\", _hoisted_26, [\n              _hoisted_27,\n              _createVNode(_component_TextInput, {\n                label: \"Color\",\n                modelValue: _ctx.badgeColor,\n                \"onUpdate:modelValue\": _cache[9] || (_cache[9] = ($event: any) => ((_ctx.badgeColor) = $event)),\n                placeholder: \"e.g. blue\",\n                note: _ctx.colorHelp\n              }, null, 8, [\"modelValue\", \"note\"]),\n              _createVNode(_component_TextInput, {\n                label: \"Logo\",\n                modelValue: _ctx.logo,\n                \"onUpdate:modelValue\": _cache[10] || (_cache[10] = ($event: any) => ((_ctx.logo) = $event)),\n                placeholder: \"e.g. vue.js\",\n                note: _ctx.logoHelp\n              }, null, 8, [\"modelValue\", \"note\"]),\n              _createVNode(_component_TextInput, {\n                label: \"Logo color\",\n                modelValue: _ctx.logoColor,\n                \"onUpdate:modelValue\": _cache[11] || (_cache[11] = ($event: any) => ((_ctx.logoColor) = $event)),\n                disabled: _ctx.logo === '' || !_ctx.dynamicBadgeEnabled,\n                class: _normalizeClass(_ctx.logo === '' ? _ctx.disabledClass : ''),\n                placeholder: \"e.g. white or #fff or #ffffff\",\n                note: _ctx.logoColorHelp\n              }, null, 8, [\"modelValue\", \"disabled\", \"class\", \"note\"])\n            ]),\n            _hoisted_28,\n            _hoisted_29\n          ], 32)\n        ])\n      ]),\n      _createElementVNode(\"div\", _hoisted_30, [\n        _createVNode(_component_Results, { result: _ctx.result }, null, 8, [\"result\"])\n      ])\n    ]),\n    _createElementVNode(\"div\", _hoisted_31, [\n      _createElementVNode(\"div\", _hoisted_32, [\n        _createVNode(_component_Help, { message: _ctx.note }, null, 8, [\"message\"])\n      ])\n    ])\n  ]))\n}","<template>\n  <div class=\"badges container-lg\">\n    <div class=\"row\">\n      <div class=\"col-12\">\n        <h1>Package badges</h1>\n\n        <p>\n          Show your project's dependencies as badges in your docs, including an\n          external link to the package in the registry.\n        </p>\n        <p>\n          Note that these badges here are <b>static</b> and do not display a\n          version number. Except for the Node badge, which shows the version\n          number in your <code>package.json</code> on GitHub.\n        </p>\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-6\">\n        <div class=\"app-input\">\n          <h2>Input values</h2>\n\n          <form @submit.prevent.enter=\"submit\">\n            <fieldset name=\"package\">\n              <legend>Package metadata</legend>\n\n              <TextInput\n                label=\"Name\"\n                v-model=\"pkgName\"\n                placeholder=\"e.g. vue\"\n                isRequired\n              />\n              <br />\n\n              <div>\n                <span>Type: </span>\n\n                <!-- Radio buttons. -->\n                <div>\n                  <input\n                    type=\"radio\"\n                    id=\"python\"\n                    name=\"package-type\"\n                    value=\"Python\"\n                    v-model=\"pkgType\"\n                    checked\n                  />\n                  <label for=\"python\">Python (PyPI)</label>\n                </div>\n\n                <div>\n                  <input\n                    type=\"radio\"\n                    id=\"node\"\n                    name=\"package-type\"\n                    value=\"Node\"\n                    v-model=\"pkgType\"\n                  />\n                  <label for=\"node\">Node (NPM)</label>\n                </div>\n\n                <div>\n                  <input\n                    type=\"radio\"\n                    id=\"ruby\"\n                    name=\"package-type\"\n                    value=\"Ruby\"\n                    v-model=\"pkgType\"\n                  />\n                  <label for=\"ruby\">Ruby (RubyGems)</label>\n                </div>\n\n                <div>\n                  <input\n                    type=\"radio\"\n                    id=\"go\"\n                    name=\"package-type\"\n                    value=\"Go\"\n                    v-model=\"pkgType\"\n                  />\n                  <label for=\"go\">Go</label>\n                </div>\n              </div>\n              <br />\n\n              <div :class=\"!dynamicBadgeEnabled ? disabledClass : ''\">\n                <span>Environment: </span>\n\n                <span>\n                  <input\n                    type=\"radio\"\n                    id=\"env-prod\"\n                    name=\"env-type\"\n                    :value=\"prodOption\"\n                    :disabled=\"!dynamicBadgeEnabled\"\n                    v-model=\"envType\"\n                    checked\n                  />\n                  <label for=\"env-prod\">{{ prodOption }}</label>\n                </span>\n\n                <span>\n                  <input\n                    type=\"radio\"\n                    id=\"env-dev\"\n                    name=\"env-type\"\n                    :value=\"devOption\"\n                    :disabled=\"!dynamicBadgeEnabled\"\n                    v-model=\"envType\"\n                  />\n                  <label for=\"env-dev\">{{ devOption }}</label>\n                </span>\n              </div>\n            </fieldset>\n            <br />\n\n            <fieldset name=\"ghRepo\">\n              <legend>GitHub repo</legend>\n\n              <TextInput\n                label=\"Username\"\n                v-model=\"username\"\n                :disabled=\"!dynamicBadgeEnabled\"\n              />\n              <br />\n\n              <TextInput\n                label=\"Repo name\"\n                v-model=\"repoName\"\n                :disabled=\"!dynamicBadgeEnabled\"\n              />\n            </fieldset>\n            <br />\n\n            <fieldset name=\"display-options\">\n              <legend>Display options</legend>\n              <TextInput\n                label=\"Color\"\n                v-model=\"badgeColor\"\n                placeholder=\"e.g. blue\"\n                :note=\"colorHelp\"\n              />\n\n              <TextInput\n                label=\"Logo\"\n                v-model=\"logo\"\n                placeholder=\"e.g. vue.js\"\n                :note=\"logoHelp\"\n              />\n\n              <TextInput\n                label=\"Logo color\"\n                v-model=\"logoColor\"\n                :disabled=\"logo === '' || !dynamicBadgeEnabled\"\n                :class=\"logo === '' ? disabledClass : ''\"\n                placeholder=\"e.g. white or #fff or #ffffff\"\n                :note=\"logoColorHelp\"\n              />\n            </fieldset>\n            <br />\n\n            <input class=\"btn\" type=\"submit\" value=\"Submit\" />\n          </form>\n        </div>\n      </div>\n\n      <div class=\"col-6\">\n        <Results :result=\"result\" />\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-12\">\n        <Help :message=\"note\" />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from \"vue\";\n\nimport { DEBUG } from \"@/constants/\";\nimport { COLOR_PRESETS } from \"@/constants/appearance\";\nimport {\n  COLOR_HELP,\n  INITIAL_RESULT,\n  LOGO_COLOR_HELP,\n  LOGO_HELP,\n} from \"@/constants/text\";\n\nimport Help from \"@/components/Help.vue\";\nimport Results from \"@/components/Results.vue\";\nimport TextInput from \"@/components/TextInput.vue\";\n\nimport { REGISTRY, RegistryKeys } from \"@/constants/urls\";\nimport { nodeVersionBadge, staticDependencyBadge } from \"@/core/packages\";\nimport { Repo } from \"@/core/Repo\";\nimport { ENVIRONMENT, EnvironmentKeys } from \"@/core/shieldsApi\";\nimport store from \"@/store\";\n\nconst NOTE = `\n- For NPM, the badge is dynamic - whatever package name you set, the version of that package in your repo will be used, without having to update the badge code. The Environent setting is for prod vs dev dependencies.\n- For the rest, the badge is just static - it does not care about your repo. If you put a version number in your badge, you'll have to remember to update it manually.\n- Sample name values for Go: 'http' (redirects to 'net/http') or 'encoding/json'.\n`;\n\nexport default defineComponent({\n  name: \"PackageBadges\",\n  components: {\n    Help,\n    Results,\n    TextInput,\n  },\n  data() {\n    return {\n      pkgName: \"vue\",\n      pkgType: \"Node\",\n\n      devOption: ENVIRONMENT[ENVIRONMENT.Dev],\n      prodOption: ENVIRONMENT[ENVIRONMENT.Prod],\n      envType: ENVIRONMENT[ENVIRONMENT.Prod],\n\n      username: store.getRepoUsername(),\n      repoName: store.getRepoName(),\n\n      badgeColor: COLOR_PRESETS.Default,\n      logo: \"\",\n      logoColor: COLOR_PRESETS.LogoDefault,\n\n      result: INITIAL_RESULT,\n\n      note: NOTE,\n      colorHelp: COLOR_HELP,\n      logoHelp: LOGO_HELP,\n      logoColorHelp: LOGO_COLOR_HELP,\n\n      disabledClass: \"disabled-text\",\n    };\n  },\n  computed: {\n    dynamicBadgeEnabled(): boolean {\n      return this.pkgType === \"Node\";\n    },\n  },\n  methods: {\n    submit() {\n      if (DEBUG) {\n        console.debug(\"Process inputs and render results\");\n      }\n\n      const logoAppearance = {\n        logo: this.logo,\n        logoColor: this.logoColor,\n      };\n\n      const registryKey = this.pkgType as RegistryKeys,\n        registry = REGISTRY[registryKey];\n\n      const dependencyBadge = registry\n        ? staticDependencyBadge(\n            this.pkgName,\n            registry,\n            logoAppearance,\n            this.badgeColor\n          )\n        : \"\";\n\n      store.setRepoUsername(this.username);\n      store.setRepoName(this.repoName);\n\n      const repo = new Repo(this.username, this.repoName);\n      const envKey = this.envType as EnvironmentKeys,\n        environment = ENVIRONMENT[envKey];\n\n      const lockedPkgBadge =\n        registry === REGISTRY.Node\n          ? nodeVersionBadge(\n              repo,\n              this.pkgName,\n              logoAppearance,\n              environment,\n              this.badgeColor\n            )\n          : \"\";\n\n      this.result = `\\\n${dependencyBadge}\n\n${lockedPkgBadge}\n        `;\n    },\n  },\n});\n</script>\n","/**\n * Package badges module.\n */\nimport {\n  GO_MODULE_SHIELD,\n  NODE_VERSION_BADGE,\n  STATIC_DEPENDENCY,\n} from \"@/constants/badgeValues\";\nimport { REGISTRY, SHIELDS_API } from \"@/constants/urls\";\nimport { Repo } from \"./Repo\";\nimport { buildUrl } from \"./badges\";\nimport { genericBadge } from \"./genericBadge\";\nimport { mdImageWithLink } from \"./markdown\";\nimport {\n  ENVIRONMENT,\n  logoQueryParams,\n  nodePkgJsonShieldUrl,\n} from \"./shieldsApi\";\nimport { TLogoAppearance } from \"./shieldsApi.d\";\n\n/**\n * Static dependency badge.\n *\n * A generic badge which can describe any project package dependency, for\n * registries supported by this app. The badge is flat, so it will display info\n * even for a dependency that does not exist on the registry.\n *\n * The `name` param might be \"requests\" for Python or \"vue\" for Node.\n *\n * The version might be like '17.x' or '>=17' or '17-19'. This is useful if\n * there is no wait to infer the version or version range automatically from\n * files in the repo, or you just want more control at the cost of manual\n * updates when ever it changes.\n *\n * TODO: Make a variation that accepts a version number for `foo >= 1` instead\n * of using just `dependency: foo`. This is already supported on the Generic\n * Page but it can be easier here.\n *\n * The PyPI URL is really meant to have a trailing forward slash, but it is\n * easier to omit here and let the URL redirect for you.\n */\nexport function staticDependencyBadge(\n  name: string,\n  registry: REGISTRY,\n  logoAppearance: TLogoAppearance,\n  color?: string\n) {\n  const url = `${registry}/${name}`;\n\n  return genericBadge(\n    STATIC_DEPENDENCY.label!,\n    name,\n    color || STATIC_DEPENDENCY.color!,\n    STATIC_DEPENDENCY.isLarge,\n    url,\n    logoAppearance.logo,\n    logoAppearance.logoColor\n  );\n}\n\n/**\n * Dynamic badge for NPM packages.\n *\n * The badge will dynamically display the locked version number of a named\n * package which is set in your repo's package.json file.\n *\n * Note - the badge URL needs something added to work for dev dependencies. I'm\n * happy to not support that now.\n *\n * Shields.io does Pipenv lock files, but not requirements.txt file, it seems.\n * And not Gemfile either.\n */\nexport function nodeVersionBadge(\n  repo: Repo,\n  pkgName: string,\n  logoAppearance: TLogoAppearance,\n  environment: ENVIRONMENT,\n  color?: string\n) {\n  const altText = `Package - ${pkgName}`;\n\n  logoAppearance.isLarge = NODE_VERSION_BADGE.IS_LARGE;\n\n  const baseImageUrl = nodePkgJsonShieldUrl(repo, pkgName, environment);\n  const styleParams = logoQueryParams(logoAppearance);\n  if (color) {\n    styleParams.color = color;\n  }\n  const imageTarget = buildUrl(baseImageUrl, styleParams);\n\n  const linkTarget = `${REGISTRY.Node}/${pkgName}`;\n\n  return mdImageWithLink({\n    altText,\n    imageTarget,\n    linkTarget,\n  });\n}\n\n// TODO: Add to Packages view or Repo view. TODO: Accept Repo type. TODO: Accept\n// color.\n/**\n * Return a Go badge that reflects the Go version in a repo's go.mod file.\n */\nexport function goVersionBadge(username: string, repoName: string) {\n  const baseImageUrl = `${SHIELDS_API.GO_MODULE}/${username}/${repoName}`;\n  const params = logoQueryParams(GO_MODULE_SHIELD);\n  const imageTarget = buildUrl(baseImageUrl, params);\n\n  const { altText, linkTarget } = GO_MODULE_SHIELD;\n\n  return mdImageWithLink({\n    altText,\n    imageTarget,\n    linkTarget,\n  });\n}\n","import { render } from \"./PackageBadges.vue?vue&type=template&id=cd6efb7a&ts=true\"\nimport script from \"./PackageBadges.vue?vue&type=script&lang=ts\"\nexport * from \"./PackageBadges.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["INITIAL_RESULT","COLOR_HELP","LOGO_HELP","LOGO_COLOR_HELP","stripLeadingSlash","value","replace","slugify","values","join","toLowerCase","_hoisted_1","_hoisted_2","_hoisted_3","class","render","_ctx","_cache","$props","$setup","$data","$options","_component_Markdown","for","slug","label","id","type","checked","modelValue","$emit","note","content","name","components","Markdown","props","String","required","Boolean","computed","this","__exports__","_component_Checkbox","asHtml","ref","outputCode","Checkbox","code","data","htmlCode","methods","highlight","block","$refs","codeBlock","mounted","updated","message","_withScopeId","n","_hoisted_4","_hoisted_5","_component_CodeItem","result","CodeItem","isRequired","placeholder","disabled","$event","target","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_21","_hoisted_22","_hoisted_23","_hoisted_24","_hoisted_25","_hoisted_26","_hoisted_27","_hoisted_28","_hoisted_29","_hoisted_30","_hoisted_31","_hoisted_32","_component_TextInput","_component_Results","_component_Help","args","submit","pkgName","pkgType","dynamicBadgeEnabled","disabledClass","prodOption","envType","devOption","username","repoName","badgeColor","colorHelp","logo","logoHelp","logoColor","logoColorHelp","staticDependencyBadge","registry","logoAppearance","color","url","genericBadge","isLarge","nodeVersionBadge","repo","environment","altText","IS_LARGE","baseImageUrl","styleParams","imageTarget","linkTarget","Node","NOTE","Help","Results","TextInput","Dev","Prod","store","getRepoUsername","getRepoName","Default","LogoDefault","console","debug","registryKey","dependencyBadge","setRepoUsername","setRepoName","Repo","envKey","lockedPkgBadge"],"sourceRoot":""}